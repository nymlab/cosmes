// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/applications/interchain_accounts/v1/account.proto (package ibc.applications.interchain_accounts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { BaseAccount } from "../../../../cosmos/auth/v1beta1/auth_pb.js";
/**
 * An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 *
 * @generated from message ibc.applications.interchain_accounts.v1.InterchainAccount
 */
export class InterchainAccount extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string account_owner = 2;
         */
        this.accountOwner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new InterchainAccount().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InterchainAccount().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InterchainAccount().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(InterchainAccount, a, b);
    }
}
InterchainAccount.runtime = proto3;
InterchainAccount.typeName = "ibc.applications.interchain_accounts.v1.InterchainAccount";
InterchainAccount.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "base_account", kind: "message", T: BaseAccount },
    { no: 2, name: "account_owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=account_pb.js.map