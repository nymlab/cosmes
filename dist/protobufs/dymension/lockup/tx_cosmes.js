// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file osmosis/lockup/tx.proto (package dymensionxyz.dymension.lockup, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { MsgBeginUnlocking, MsgBeginUnlockingAll, MsgBeginUnlockingAllResponse, MsgBeginUnlockingResponse, MsgExtendLockup, MsgExtendLockupResponse, MsgForceUnlock, MsgForceUnlockResponse, MsgLockTokens, MsgLockTokensResponse } from "./tx_pb.js";
const TYPE_NAME = "dymensionxyz.dymension.lockup.Msg";
/**
 * LockTokens lock tokens
 *
 * @generated from rpc dymensionxyz.dymension.lockup.Msg.LockTokens
 */
export const MsgLockTokensService = {
    typeName: TYPE_NAME,
    method: "LockTokens",
    Request: MsgLockTokens,
    Response: MsgLockTokensResponse,
};
/**
 * BeginUnlockingAll begin unlocking all tokens
 *
 * @generated from rpc dymensionxyz.dymension.lockup.Msg.BeginUnlockingAll
 */
export const MsgBeginUnlockingAllService = {
    typeName: TYPE_NAME,
    method: "BeginUnlockingAll",
    Request: MsgBeginUnlockingAll,
    Response: MsgBeginUnlockingAllResponse,
};
/**
 * MsgBeginUnlocking begins unlocking tokens by lock ID
 *
 * @generated from rpc dymensionxyz.dymension.lockup.Msg.BeginUnlocking
 */
export const MsgBeginUnlockingService = {
    typeName: TYPE_NAME,
    method: "BeginUnlocking",
    Request: MsgBeginUnlocking,
    Response: MsgBeginUnlockingResponse,
};
/**
 * MsgEditLockup edits the existing lockups by lock ID
 *
 * @generated from rpc dymensionxyz.dymension.lockup.Msg.ExtendLockup
 */
export const MsgExtendLockupService = {
    typeName: TYPE_NAME,
    method: "ExtendLockup",
    Request: MsgExtendLockup,
    Response: MsgExtendLockupResponse,
};
/**
 * @generated from rpc dymensionxyz.dymension.lockup.Msg.ForceUnlock
 */
export const MsgForceUnlockService = {
    typeName: TYPE_NAME,
    method: "ForceUnlock",
    Request: MsgForceUnlock,
    Response: MsgForceUnlockResponse,
};
//# sourceMappingURL=tx_cosmes.js.map