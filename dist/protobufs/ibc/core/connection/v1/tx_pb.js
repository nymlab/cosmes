// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/core/connection/v1/tx.proto (package ibc.core.connection.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Counterparty, Params, Version } from "./connection_pb.js";
import { Height } from "../../client/v1/client_pb.js";
/**
 * MsgConnectionOpenInit defines the msg sent by an account on Chain A to
 * initialize a connection with Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenInit
 */
export class MsgConnectionOpenInit extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string client_id = 1;
         */
        this.clientId = "";
        /**
         * @generated from field: uint64 delay_period = 4;
         */
        this.delayPeriod = protoInt64.zero;
        /**
         * @generated from field: string signer = 5;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenInit().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenInit().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenInit().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenInit, a, b);
    }
}
MsgConnectionOpenInit.runtime = proto3;
MsgConnectionOpenInit.typeName = "ibc.core.connection.v1.MsgConnectionOpenInit";
MsgConnectionOpenInit.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "counterparty", kind: "message", T: Counterparty },
    { no: 3, name: "version", kind: "message", T: Version },
    { no: 4, name: "delay_period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
 * type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenInitResponse
 */
export class MsgConnectionOpenInitResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenInitResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenInitResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenInitResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenInitResponse, a, b);
    }
}
MsgConnectionOpenInitResponse.runtime = proto3;
MsgConnectionOpenInitResponse.typeName = "ibc.core.connection.v1.MsgConnectionOpenInitResponse";
MsgConnectionOpenInitResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
 * connection on Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenTry
 */
export class MsgConnectionOpenTry extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string client_id = 1;
         */
        this.clientId = "";
        /**
         * Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.
         *
         * @generated from field: string previous_connection_id = 2 [deprecated = true];
         * @deprecated
         */
        this.previousConnectionId = "";
        /**
         * @generated from field: uint64 delay_period = 5;
         */
        this.delayPeriod = protoInt64.zero;
        /**
         * @generated from field: repeated ibc.core.connection.v1.Version counterparty_versions = 6;
         */
        this.counterpartyVersions = [];
        /**
         * proof of the initialization the connection on Chain A: `UNINITIALIZED ->
         * INIT`
         *
         * @generated from field: bytes proof_init = 8;
         */
        this.proofInit = new Uint8Array(0);
        /**
         * proof of client state included in message
         *
         * @generated from field: bytes proof_client = 9;
         */
        this.proofClient = new Uint8Array(0);
        /**
         * proof of client consensus state
         *
         * @generated from field: bytes proof_consensus = 10;
         */
        this.proofConsensus = new Uint8Array(0);
        /**
         * @generated from field: string signer = 12;
         */
        this.signer = "";
        /**
         * optional proof data for host state machines that are unable to introspect their own consensus state
         *
         * @generated from field: bytes host_consensus_state_proof = 13;
         */
        this.hostConsensusStateProof = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenTry().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenTry().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenTry().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenTry, a, b);
    }
}
MsgConnectionOpenTry.runtime = proto3;
MsgConnectionOpenTry.typeName = "ibc.core.connection.v1.MsgConnectionOpenTry";
MsgConnectionOpenTry.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "previous_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_state", kind: "message", T: Any },
    { no: 4, name: "counterparty", kind: "message", T: Counterparty },
    { no: 5, name: "delay_period", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "counterparty_versions", kind: "message", T: Version, repeated: true },
    { no: 7, name: "proof_height", kind: "message", T: Height },
    { no: 8, name: "proof_init", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "proof_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 10, name: "proof_consensus", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 11, name: "consensus_height", kind: "message", T: Height },
    { no: 12, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "host_consensus_state_proof", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenTryResponse
 */
export class MsgConnectionOpenTryResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenTryResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenTryResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenTryResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenTryResponse, a, b);
    }
}
MsgConnectionOpenTryResponse.runtime = proto3;
MsgConnectionOpenTryResponse.typeName = "ibc.core.connection.v1.MsgConnectionOpenTryResponse";
MsgConnectionOpenTryResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
 * acknowledge the change of connection state to TRYOPEN on Chain B.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenAck
 */
export class MsgConnectionOpenAck extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string connection_id = 1;
         */
        this.connectionId = "";
        /**
         * @generated from field: string counterparty_connection_id = 2;
         */
        this.counterpartyConnectionId = "";
        /**
         * proof of the initialization the connection on Chain B: `UNINITIALIZED ->
         * TRYOPEN`
         *
         * @generated from field: bytes proof_try = 6;
         */
        this.proofTry = new Uint8Array(0);
        /**
         * proof of client state included in message
         *
         * @generated from field: bytes proof_client = 7;
         */
        this.proofClient = new Uint8Array(0);
        /**
         * proof of client consensus state
         *
         * @generated from field: bytes proof_consensus = 8;
         */
        this.proofConsensus = new Uint8Array(0);
        /**
         * @generated from field: string signer = 10;
         */
        this.signer = "";
        /**
         * optional proof data for host state machines that are unable to introspect their own consensus state
         *
         * @generated from field: bytes host_consensus_state_proof = 11;
         */
        this.hostConsensusStateProof = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenAck().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenAck().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenAck().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenAck, a, b);
    }
}
MsgConnectionOpenAck.runtime = proto3;
MsgConnectionOpenAck.typeName = "ibc.core.connection.v1.MsgConnectionOpenAck";
MsgConnectionOpenAck.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "counterparty_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "version", kind: "message", T: Version },
    { no: 4, name: "client_state", kind: "message", T: Any },
    { no: 5, name: "proof_height", kind: "message", T: Height },
    { no: 6, name: "proof_try", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "proof_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 8, name: "proof_consensus", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "consensus_height", kind: "message", T: Height },
    { no: 10, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "host_consensus_state_proof", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenAckResponse
 */
export class MsgConnectionOpenAckResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenAckResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenAckResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenAckResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenAckResponse, a, b);
    }
}
MsgConnectionOpenAckResponse.runtime = proto3;
MsgConnectionOpenAckResponse.typeName = "ibc.core.connection.v1.MsgConnectionOpenAckResponse";
MsgConnectionOpenAckResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
 * acknowledge the change of connection state to OPEN on Chain A.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenConfirm
 */
export class MsgConnectionOpenConfirm extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string connection_id = 1;
         */
        this.connectionId = "";
        /**
         * proof for the change of the connection state on Chain A: `INIT -> OPEN`
         *
         * @generated from field: bytes proof_ack = 2;
         */
        this.proofAck = new Uint8Array(0);
        /**
         * @generated from field: string signer = 4;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenConfirm().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenConfirm().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenConfirm().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenConfirm, a, b);
    }
}
MsgConnectionOpenConfirm.runtime = proto3;
MsgConnectionOpenConfirm.typeName = "ibc.core.connection.v1.MsgConnectionOpenConfirm";
MsgConnectionOpenConfirm.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proof_ack", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "proof_height", kind: "message", T: Height },
    { no: 4, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
 * response type.
 *
 * @generated from message ibc.core.connection.v1.MsgConnectionOpenConfirmResponse
 */
export class MsgConnectionOpenConfirmResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgConnectionOpenConfirmResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgConnectionOpenConfirmResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgConnectionOpenConfirmResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgConnectionOpenConfirmResponse, a, b);
    }
}
MsgConnectionOpenConfirmResponse.runtime = proto3;
MsgConnectionOpenConfirmResponse.typeName = "ibc.core.connection.v1.MsgConnectionOpenConfirmResponse";
MsgConnectionOpenConfirmResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
 *
 * @generated from message ibc.core.connection.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 1;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParams, a, b);
    }
}
MsgUpdateParams.runtime = proto3;
MsgUpdateParams.typeName = "ibc.core.connection.v1.MsgUpdateParams";
MsgUpdateParams.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
]);
/**
 * MsgUpdateParamsResponse defines the MsgUpdateParams response type.
 *
 * @generated from message ibc.core.connection.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
MsgUpdateParamsResponse.runtime = proto3;
MsgUpdateParamsResponse.typeName = "ibc.core.connection.v1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map