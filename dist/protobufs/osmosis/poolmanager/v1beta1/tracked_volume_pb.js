// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/poolmanager/v1beta1/tracked_volume.proto (package osmosis.poolmanager.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
/**
 * @generated from message osmosis.poolmanager.v1beta1.TrackedVolume
 */
export class TrackedVolume extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
         */
        this.amount = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TrackedVolume().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TrackedVolume().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TrackedVolume().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TrackedVolume, a, b);
    }
}
TrackedVolume.runtime = proto3;
TrackedVolume.typeName = "osmosis.poolmanager.v1beta1.TrackedVolume";
TrackedVolume.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "amount", kind: "message", T: Coin, repeated: true },
]);
//# sourceMappingURL=tracked_volume_pb.js.map