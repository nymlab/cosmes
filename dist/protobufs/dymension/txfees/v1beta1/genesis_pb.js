// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/txfees/v1beta1/genesis.proto (package dymensionxyz.dymension.txfees.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { FeeToken } from "./feetoken_pb.js";
/**
 * GenesisState defines the txfees module's genesis state.
 *
 * @generated from message dymensionxyz.dymension.txfees.v1beta1.GenesisState
 */
export class GenesisState extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string basedenom = 2;
         */
        this.basedenom = "";
        /**
         * @generated from field: repeated dymensionxyz.dymension.txfees.v1beta1.FeeToken feetokens = 3;
         */
        this.feetokens = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisState().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisState().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisState().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GenesisState, a, b);
    }
}
GenesisState.runtime = proto3;
GenesisState.typeName = "dymensionxyz.dymension.txfees.v1beta1.GenesisState";
GenesisState.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 2, name: "basedenom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "feetokens", kind: "message", T: FeeToken, repeated: true },
]);
/**
 * Params holds parameters for the incentives module
 *
 * @generated from message dymensionxyz.dymension.txfees.v1beta1.Params
 */
export class Params extends Message {
    constructor(data) {
        super();
        /**
         * epoch_identifier is what epoch type swap and burn will be triggered by
         * (day, week, etc.)
         *
         * @generated from field: string epoch_identifier = 1;
         */
        this.epochIdentifier = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Params().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Params().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Params().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Params, a, b);
    }
}
Params.runtime = proto3;
Params.typeName = "dymensionxyz.dymension.txfees.v1beta1.Params";
Params.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "epoch_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=genesis_pb.js.map