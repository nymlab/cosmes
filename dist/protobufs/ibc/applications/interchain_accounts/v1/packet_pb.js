// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/applications/interchain_accounts/v1/packet.proto (package ibc.applications.interchain_accounts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3 } from "@bufbuild/protobuf";
/**
 * Type defines a classification of message issued from a controller chain to its associated interchain accounts
 * host
 *
 * @generated from enum ibc.applications.interchain_accounts.v1.Type
 */
export var Type;
(function (Type) {
    /**
     * Default zero value enumeration
     *
     * @generated from enum value: TYPE_UNSPECIFIED = 0;
     */
    Type[Type["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * Execute a transaction on an interchain accounts host chain
     *
     * @generated from enum value: TYPE_EXECUTE_TX = 1;
     */
    Type[Type["EXECUTE_TX"] = 1] = "EXECUTE_TX";
})(Type || (Type = {}));
// Retrieve enum metadata with: proto3.getEnumType(Type)
proto3.util.setEnumType(Type, "ibc.applications.interchain_accounts.v1.Type", [
    { no: 0, name: "TYPE_UNSPECIFIED" },
    { no: 1, name: "TYPE_EXECUTE_TX" },
]);
/**
 * InterchainAccountPacketData is comprised of a raw transaction, type of transaction and optional memo field.
 *
 * @generated from message ibc.applications.interchain_accounts.v1.InterchainAccountPacketData
 */
export class InterchainAccountPacketData extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: ibc.applications.interchain_accounts.v1.Type type = 1;
         */
        this.type = Type.UNSPECIFIED;
        /**
         * @generated from field: bytes data = 2;
         */
        this.data = new Uint8Array(0);
        /**
         * @generated from field: string memo = 3;
         */
        this.memo = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new InterchainAccountPacketData().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new InterchainAccountPacketData().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new InterchainAccountPacketData().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(InterchainAccountPacketData, a, b);
    }
}
InterchainAccountPacketData.runtime = proto3;
InterchainAccountPacketData.typeName = "ibc.applications.interchain_accounts.v1.InterchainAccountPacketData";
InterchainAccountPacketData.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(Type) },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "memo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * CosmosTx contains a list of sdk.Msg's. It should be used when sending transactions to an SDK host chain.
 *
 * @generated from message ibc.applications.interchain_accounts.v1.CosmosTx
 */
export class CosmosTx extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated google.protobuf.Any messages = 1;
         */
        this.messages = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CosmosTx().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CosmosTx().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CosmosTx().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CosmosTx, a, b);
    }
}
CosmosTx.runtime = proto3;
CosmosTx.typeName = "ibc.applications.interchain_accounts.v1.CosmosTx";
CosmosTx.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "messages", kind: "message", T: Any, repeated: true },
]);
//# sourceMappingURL=packet_pb.js.map