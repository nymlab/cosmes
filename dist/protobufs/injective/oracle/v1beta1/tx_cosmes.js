// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/oracle/v1beta1/tx.proto (package injective.oracle.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { MsgRelayBandRates, MsgRelayBandRatesResponse, MsgRelayCoinbaseMessages, MsgRelayCoinbaseMessagesResponse, MsgRelayPriceFeedPrice, MsgRelayPriceFeedPriceResponse, MsgRelayProviderPrices, MsgRelayProviderPricesResponse, MsgRelayPythPrices, MsgRelayPythPricesResponse, MsgRequestBandIBCRates, MsgRequestBandIBCRatesResponse, MsgUpdateParams, MsgUpdateParamsResponse } from "./tx_pb.js";
const TYPE_NAME = "injective.oracle.v1beta1.Msg";
/**
 * RelayProviderPrice defines a method for relaying a price for a
 * provider-based oracle
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RelayProviderPrices
 */
export const MsgRelayProviderPricesService = {
    typeName: TYPE_NAME,
    method: "RelayProviderPrices",
    Request: MsgRelayProviderPrices,
    Response: MsgRelayProviderPricesResponse,
};
/**
 * RelayPriceFeedPrice defines a method for relaying a price for a price
 * feeder-based oracle
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RelayPriceFeedPrice
 */
export const MsgRelayPriceFeedPriceService = {
    typeName: TYPE_NAME,
    method: "RelayPriceFeedPrice",
    Request: MsgRelayPriceFeedPrice,
    Response: MsgRelayPriceFeedPriceResponse,
};
/**
 * RelayBandRates defines a method for relaying rates from Band
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RelayBandRates
 */
export const MsgRelayBandRatesService = {
    typeName: TYPE_NAME,
    method: "RelayBandRates",
    Request: MsgRelayBandRates,
    Response: MsgRelayBandRatesResponse,
};
/**
 * RequestBandIBCRates defines a method for fetching rates from Band ibc
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RequestBandIBCRates
 */
export const MsgRequestBandIBCRatesService = {
    typeName: TYPE_NAME,
    method: "RequestBandIBCRates",
    Request: MsgRequestBandIBCRates,
    Response: MsgRequestBandIBCRatesResponse,
};
/**
 * RelayCoinbaseMessages defines a method for relaying price messages from
 * Coinbase API
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RelayCoinbaseMessages
 */
export const MsgRelayCoinbaseMessagesService = {
    typeName: TYPE_NAME,
    method: "RelayCoinbaseMessages",
    Request: MsgRelayCoinbaseMessages,
    Response: MsgRelayCoinbaseMessagesResponse,
};
/**
 * RelayPythPrices defines a method for relaying rates from the Pyth contract
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.RelayPythPrices
 */
export const MsgRelayPythPricesService = {
    typeName: TYPE_NAME,
    method: "RelayPythPrices",
    Request: MsgRelayPythPrices,
    Response: MsgRelayPythPricesResponse,
};
/**
 *  UpdateParams enables updating oracle module's params via governance
 *
 * @generated from rpc injective.oracle.v1beta1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
    typeName: TYPE_NAME,
    method: "UpdateParams",
    Request: MsgUpdateParams,
    Response: MsgUpdateParamsResponse,
};
//# sourceMappingURL=tx_cosmes.js.map