// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ethermint/feemarket/v1/events.proto (package ethermint.feemarket.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * EventFeeMarket is the event type for the fee market module
 *
 * @generated from message ethermint.feemarket.v1.EventFeeMarket
 */
export class EventFeeMarket extends Message {
    constructor(data) {
        super();
        /**
         * base_fee for EIP-1559 blocks
         *
         * @generated from field: string base_fee = 1;
         */
        this.baseFee = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EventFeeMarket().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EventFeeMarket().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EventFeeMarket().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(EventFeeMarket, a, b);
    }
}
EventFeeMarket.runtime = proto3;
EventFeeMarket.typeName = "ethermint.feemarket.v1.EventFeeMarket";
EventFeeMarket.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "base_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * EventBlockGas defines an Ethereum block gas event
 *
 * @generated from message ethermint.feemarket.v1.EventBlockGas
 */
export class EventBlockGas extends Message {
    constructor(data) {
        super();
        /**
         * height of the block
         *
         * @generated from field: string height = 1;
         */
        this.height = "";
        /**
         * amount of gas wanted by the block
         *
         * @generated from field: string amount = 2;
         */
        this.amount = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EventBlockGas().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EventBlockGas().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EventBlockGas().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(EventBlockGas, a, b);
    }
}
EventBlockGas.runtime = proto3;
EventBlockGas.typeName = "ethermint.feemarket.v1.EventBlockGas";
EventBlockGas.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "height", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=events_pb.js.map