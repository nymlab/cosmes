// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/lockup/query.proto (package dymensionxyz.dymension.lockup, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Duration, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { Coin } from "../../cosmos/base/v1beta1/coin_pb.js";
import { PeriodLock } from "./lock_pb.js";
import { Params } from "./params_pb.js";
/**
 * @generated from message dymensionxyz.dymension.lockup.ModuleBalanceRequest
 */
export class ModuleBalanceRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleBalanceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleBalanceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleBalanceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleBalanceRequest, a, b);
    }
}
ModuleBalanceRequest.runtime = proto3;
ModuleBalanceRequest.typeName = "dymensionxyz.dymension.lockup.ModuleBalanceRequest";
ModuleBalanceRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.lockup.ModuleBalanceResponse
 */
export class ModuleBalanceResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
         */
        this.coins = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleBalanceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleBalanceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleBalanceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleBalanceResponse, a, b);
    }
}
ModuleBalanceResponse.runtime = proto3;
ModuleBalanceResponse.typeName = "dymensionxyz.dymension.lockup.ModuleBalanceResponse";
ModuleBalanceResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.ModuleLockedAmountRequest
 */
export class ModuleLockedAmountRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleLockedAmountRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleLockedAmountRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleLockedAmountRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleLockedAmountRequest, a, b);
    }
}
ModuleLockedAmountRequest.runtime = proto3;
ModuleLockedAmountRequest.typeName = "dymensionxyz.dymension.lockup.ModuleLockedAmountRequest";
ModuleLockedAmountRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.lockup.ModuleLockedAmountResponse
 */
export class ModuleLockedAmountResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
         */
        this.coins = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ModuleLockedAmountResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ModuleLockedAmountResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ModuleLockedAmountResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ModuleLockedAmountResponse, a, b);
    }
}
ModuleLockedAmountResponse.runtime = proto3;
ModuleLockedAmountResponse.typeName = "dymensionxyz.dymension.lockup.ModuleLockedAmountResponse";
ModuleLockedAmountResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockableCoinsRequest
 */
export class AccountUnlockableCoinsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockableCoinsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockableCoinsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockableCoinsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockableCoinsRequest, a, b);
    }
}
AccountUnlockableCoinsRequest.runtime = proto3;
AccountUnlockableCoinsRequest.typeName = "dymensionxyz.dymension.lockup.AccountUnlockableCoinsRequest";
AccountUnlockableCoinsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockableCoinsResponse
 */
export class AccountUnlockableCoinsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
         */
        this.coins = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockableCoinsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockableCoinsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockableCoinsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockableCoinsResponse, a, b);
    }
}
AccountUnlockableCoinsResponse.runtime = proto3;
AccountUnlockableCoinsResponse.typeName = "dymensionxyz.dymension.lockup.AccountUnlockableCoinsResponse";
AccountUnlockableCoinsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockingCoinsRequest
 */
export class AccountUnlockingCoinsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockingCoinsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockingCoinsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockingCoinsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockingCoinsRequest, a, b);
    }
}
AccountUnlockingCoinsRequest.runtime = proto3;
AccountUnlockingCoinsRequest.typeName = "dymensionxyz.dymension.lockup.AccountUnlockingCoinsRequest";
AccountUnlockingCoinsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockingCoinsResponse
 */
export class AccountUnlockingCoinsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
         */
        this.coins = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockingCoinsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockingCoinsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockingCoinsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockingCoinsResponse, a, b);
    }
}
AccountUnlockingCoinsResponse.runtime = proto3;
AccountUnlockingCoinsResponse.typeName = "dymensionxyz.dymension.lockup.AccountUnlockingCoinsResponse";
AccountUnlockingCoinsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedCoinsRequest
 */
export class AccountLockedCoinsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedCoinsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedCoinsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedCoinsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedCoinsRequest, a, b);
    }
}
AccountLockedCoinsRequest.runtime = proto3;
AccountLockedCoinsRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedCoinsRequest";
AccountLockedCoinsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedCoinsResponse
 */
export class AccountLockedCoinsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
         */
        this.coins = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedCoinsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedCoinsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedCoinsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedCoinsResponse, a, b);
    }
}
AccountLockedCoinsResponse.runtime = proto3;
AccountLockedCoinsResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedCoinsResponse";
AccountLockedCoinsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coins", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeRequest
 */
export class AccountLockedPastTimeRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeRequest, a, b);
    }
}
AccountLockedPastTimeRequest.runtime = proto3;
AccountLockedPastTimeRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeRequest";
AccountLockedPastTimeRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeResponse
 */
export class AccountLockedPastTimeResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeResponse, a, b);
    }
}
AccountLockedPastTimeResponse.runtime = proto3;
AccountLockedPastTimeResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeResponse";
AccountLockedPastTimeResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest
 */
export class AccountLockedPastTimeNotUnlockingOnlyRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeNotUnlockingOnlyRequest, a, b);
    }
}
AccountLockedPastTimeNotUnlockingOnlyRequest.runtime = proto3;
AccountLockedPastTimeNotUnlockingOnlyRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest";
AccountLockedPastTimeNotUnlockingOnlyRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse
 */
export class AccountLockedPastTimeNotUnlockingOnlyResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeNotUnlockingOnlyResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeNotUnlockingOnlyResponse, a, b);
    }
}
AccountLockedPastTimeNotUnlockingOnlyResponse.runtime = proto3;
AccountLockedPastTimeNotUnlockingOnlyResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse";
AccountLockedPastTimeNotUnlockingOnlyResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockedBeforeTimeRequest
 */
export class AccountUnlockedBeforeTimeRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockedBeforeTimeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockedBeforeTimeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockedBeforeTimeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockedBeforeTimeRequest, a, b);
    }
}
AccountUnlockedBeforeTimeRequest.runtime = proto3;
AccountUnlockedBeforeTimeRequest.typeName = "dymensionxyz.dymension.lockup.AccountUnlockedBeforeTimeRequest";
AccountUnlockedBeforeTimeRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountUnlockedBeforeTimeResponse
 */
export class AccountUnlockedBeforeTimeResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountUnlockedBeforeTimeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountUnlockedBeforeTimeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountUnlockedBeforeTimeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountUnlockedBeforeTimeResponse, a, b);
    }
}
AccountUnlockedBeforeTimeResponse.runtime = proto3;
AccountUnlockedBeforeTimeResponse.typeName = "dymensionxyz.dymension.lockup.AccountUnlockedBeforeTimeResponse";
AccountUnlockedBeforeTimeResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeDenomRequest
 */
export class AccountLockedPastTimeDenomRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        /**
         * @generated from field: string denom = 3;
         */
        this.denom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeDenomRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeDenomRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeDenomRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeDenomRequest, a, b);
    }
}
AccountLockedPastTimeDenomRequest.runtime = proto3;
AccountLockedPastTimeDenomRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeDenomRequest";
AccountLockedPastTimeDenomRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
    { no: 3, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedPastTimeDenomResponse
 */
export class AccountLockedPastTimeDenomResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedPastTimeDenomResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedPastTimeDenomResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedPastTimeDenomResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedPastTimeDenomResponse, a, b);
    }
}
AccountLockedPastTimeDenomResponse.runtime = proto3;
AccountLockedPastTimeDenomResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedPastTimeDenomResponse";
AccountLockedPastTimeDenomResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.LockedDenomRequest
 */
export class LockedDenomRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string denom = 1;
         */
        this.denom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LockedDenomRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LockedDenomRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LockedDenomRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LockedDenomRequest, a, b);
    }
}
LockedDenomRequest.runtime = proto3;
LockedDenomRequest.typeName = "dymensionxyz.dymension.lockup.LockedDenomRequest";
LockedDenomRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "duration", kind: "message", T: Duration },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.LockedDenomResponse
 */
export class LockedDenomResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string amount = 1;
         */
        this.amount = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LockedDenomResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LockedDenomResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LockedDenomResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LockedDenomResponse, a, b);
    }
}
LockedDenomResponse.runtime = proto3;
LockedDenomResponse.typeName = "dymensionxyz.dymension.lockup.LockedDenomResponse";
LockedDenomResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.LockedRequest
 */
export class LockedRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 lock_id = 1;
         */
        this.lockId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LockedRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LockedRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LockedRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LockedRequest, a, b);
    }
}
LockedRequest.runtime = proto3;
LockedRequest.typeName = "dymensionxyz.dymension.lockup.LockedRequest";
LockedRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "lock_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.LockedResponse
 */
export class LockedResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LockedResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LockedResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LockedResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LockedResponse, a, b);
    }
}
LockedResponse.runtime = proto3;
LockedResponse.typeName = "dymensionxyz.dymension.lockup.LockedResponse";
LockedResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "lock", kind: "message", T: PeriodLock },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.NextLockIDRequest
 */
export class NextLockIDRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new NextLockIDRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new NextLockIDRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new NextLockIDRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(NextLockIDRequest, a, b);
    }
}
NextLockIDRequest.runtime = proto3;
NextLockIDRequest.typeName = "dymensionxyz.dymension.lockup.NextLockIDRequest";
NextLockIDRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.lockup.NextLockIDResponse
 */
export class NextLockIDResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 lock_id = 1;
         */
        this.lockId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new NextLockIDResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new NextLockIDResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new NextLockIDResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(NextLockIDResponse, a, b);
    }
}
NextLockIDResponse.runtime = proto3;
NextLockIDResponse.typeName = "dymensionxyz.dymension.lockup.NextLockIDResponse";
NextLockIDResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "lock_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationRequest
 */
export class AccountLockedLongerDurationRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationRequest, a, b);
    }
}
AccountLockedLongerDurationRequest.runtime = proto3;
AccountLockedLongerDurationRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationRequest";
AccountLockedLongerDurationRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "duration", kind: "message", T: Duration },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationResponse
 */
export class AccountLockedLongerDurationResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationResponse, a, b);
    }
}
AccountLockedLongerDurationResponse.runtime = proto3;
AccountLockedLongerDurationResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationResponse";
AccountLockedLongerDurationResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedDurationRequest
 */
export class AccountLockedDurationRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedDurationRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedDurationRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedDurationRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedDurationRequest, a, b);
    }
}
AccountLockedDurationRequest.runtime = proto3;
AccountLockedDurationRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedDurationRequest";
AccountLockedDurationRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "duration", kind: "message", T: Duration },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedDurationResponse
 */
export class AccountLockedDurationResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedDurationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedDurationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedDurationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedDurationResponse, a, b);
    }
}
AccountLockedDurationResponse.runtime = proto3;
AccountLockedDurationResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedDurationResponse";
AccountLockedDurationResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest
 */
export class AccountLockedLongerDurationNotUnlockingOnlyRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationNotUnlockingOnlyRequest, a, b);
    }
}
AccountLockedLongerDurationNotUnlockingOnlyRequest.runtime = proto3;
AccountLockedLongerDurationNotUnlockingOnlyRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest";
AccountLockedLongerDurationNotUnlockingOnlyRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "duration", kind: "message", T: Duration },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse
 */
export class AccountLockedLongerDurationNotUnlockingOnlyResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationNotUnlockingOnlyResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationNotUnlockingOnlyResponse, a, b);
    }
}
AccountLockedLongerDurationNotUnlockingOnlyResponse.runtime = proto3;
AccountLockedLongerDurationNotUnlockingOnlyResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse";
AccountLockedLongerDurationNotUnlockingOnlyResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationDenomRequest
 */
export class AccountLockedLongerDurationDenomRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string owner = 1;
         */
        this.owner = "";
        /**
         * @generated from field: string denom = 3;
         */
        this.denom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationDenomRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationDenomRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationDenomRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationDenomRequest, a, b);
    }
}
AccountLockedLongerDurationDenomRequest.runtime = proto3;
AccountLockedLongerDurationDenomRequest.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationDenomRequest";
AccountLockedLongerDurationDenomRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "duration", kind: "message", T: Duration },
    { no: 3, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.AccountLockedLongerDurationDenomResponse
 */
export class AccountLockedLongerDurationDenomResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated dymensionxyz.dymension.lockup.PeriodLock locks = 1;
         */
        this.locks = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccountLockedLongerDurationDenomResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccountLockedLongerDurationDenomResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccountLockedLongerDurationDenomResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(AccountLockedLongerDurationDenomResponse, a, b);
    }
}
AccountLockedLongerDurationDenomResponse.runtime = proto3;
AccountLockedLongerDurationDenomResponse.typeName = "dymensionxyz.dymension.lockup.AccountLockedLongerDurationDenomResponse";
AccountLockedLongerDurationDenomResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "locks", kind: "message", T: PeriodLock, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.lockup.QueryParamsRequest
 */
export class QueryParamsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryParamsRequest, a, b);
    }
}
QueryParamsRequest.runtime = proto3;
QueryParamsRequest.typeName = "dymensionxyz.dymension.lockup.QueryParamsRequest";
QueryParamsRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.lockup.QueryParamsResponse
 */
export class QueryParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryParamsResponse, a, b);
    }
}
QueryParamsResponse.runtime = proto3;
QueryParamsResponse.typeName = "dymensionxyz.dymension.lockup.QueryParamsResponse";
QueryParamsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
]);
//# sourceMappingURL=query_pb.js.map