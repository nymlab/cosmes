// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/incentives/gov.proto (package osmosis.incentives, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { CreateGroup } from "./group_pb.js";
/**
 * CreateGroupsProposal is a type for creating one or more groups via
 * governance. This is useful for creating groups without having to pay
 * creation fees.
 *
 * @generated from message osmosis.incentives.CreateGroupsProposal
 */
export class CreateGroupsProposal extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: repeated osmosis.incentives.CreateGroup create_groups = 3;
         */
        this.createGroups = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateGroupsProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateGroupsProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateGroupsProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateGroupsProposal, a, b);
    }
}
CreateGroupsProposal.runtime = proto3;
CreateGroupsProposal.typeName = "osmosis.incentives.CreateGroupsProposal";
CreateGroupsProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "create_groups", kind: "message", T: CreateGroup, repeated: true },
]);
//# sourceMappingURL=gov_pb.js.map