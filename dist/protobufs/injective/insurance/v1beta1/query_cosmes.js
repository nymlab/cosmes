// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/insurance/v1beta1/query.proto (package injective.insurance.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { QueryEstimatedRedemptionsRequest, QueryEstimatedRedemptionsResponse, QueryInsuranceFundRequest, QueryInsuranceFundResponse, QueryInsuranceFundsRequest, QueryInsuranceFundsResponse, QueryInsuranceParamsRequest, QueryInsuranceParamsResponse, QueryModuleStateRequest, QueryModuleStateResponse, QueryPendingRedemptionsRequest, QueryPendingRedemptionsResponse } from "./query_pb.js";
const TYPE_NAME = "injective.insurance.v1beta1.Query";
/**
 * Retrieves insurance params
 *
 * @generated from rpc injective.insurance.v1beta1.Query.InsuranceParams
 */
export const QueryInsuranceParamsService = {
    typeName: TYPE_NAME,
    method: "InsuranceParams",
    Request: QueryInsuranceParamsRequest,
    Response: QueryInsuranceParamsResponse,
};
/**
 * Retrieves individual insurance fund information from market id
 *
 * @generated from rpc injective.insurance.v1beta1.Query.InsuranceFund
 */
export const QueryInsuranceFundService = {
    typeName: TYPE_NAME,
    method: "InsuranceFund",
    Request: QueryInsuranceFundRequest,
    Response: QueryInsuranceFundResponse,
};
/**
 * Retrieves all insurance funds
 *
 * @generated from rpc injective.insurance.v1beta1.Query.InsuranceFunds
 */
export const QueryInsuranceFundsService = {
    typeName: TYPE_NAME,
    method: "InsuranceFunds",
    Request: QueryInsuranceFundsRequest,
    Response: QueryInsuranceFundsResponse,
};
/**
 * Retrives the value of insurance fund share token at current price (not
 * pending redemption)
 *
 * @generated from rpc injective.insurance.v1beta1.Query.EstimatedRedemptions
 */
export const QueryEstimatedRedemptionsService = {
    typeName: TYPE_NAME,
    method: "EstimatedRedemptions",
    Request: QueryEstimatedRedemptionsRequest,
    Response: QueryEstimatedRedemptionsResponse,
};
/**
 * Retrieves pending redemptions' share token at current price
 *
 * @generated from rpc injective.insurance.v1beta1.Query.PendingRedemptions
 */
export const QueryPendingRedemptionsService = {
    typeName: TYPE_NAME,
    method: "PendingRedemptions",
    Request: QueryPendingRedemptionsRequest,
    Response: QueryPendingRedemptionsResponse,
};
/**
 * Retrieves the entire insurance module's state
 *
 * @generated from rpc injective.insurance.v1beta1.Query.InsuranceModuleState
 */
export const QueryInsuranceModuleStateService = {
    typeName: TYPE_NAME,
    method: "InsuranceModuleState",
    Request: QueryModuleStateRequest,
    Response: QueryModuleStateResponse,
};
//# sourceMappingURL=query_cosmes.js.map