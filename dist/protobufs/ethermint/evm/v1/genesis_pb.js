// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ethermint/evm/v1/genesis.proto (package ethermint.evm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params, State } from "./evm_pb.js";
/**
 * GenesisState defines the evm module's genesis state.
 *
 * @generated from message ethermint.evm.v1.GenesisState
 */
export class GenesisState extends Message {
    constructor(data) {
        super();
        /**
         * accounts is an array containing the ethereum genesis accounts.
         *
         * @generated from field: repeated ethermint.evm.v1.GenesisAccount accounts = 1;
         */
        this.accounts = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisState().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisState().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisState().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GenesisState, a, b);
    }
}
GenesisState.runtime = proto3;
GenesisState.typeName = "ethermint.evm.v1.GenesisState";
GenesisState.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "accounts", kind: "message", T: GenesisAccount, repeated: true },
    { no: 2, name: "params", kind: "message", T: Params },
]);
/**
 * GenesisAccount defines an account to be initialized in the genesis state.
 * Its main difference between with Geth's GenesisAccount is that it uses a
 * custom storage type and that it doesn't contain the private key field.
 *
 * @generated from message ethermint.evm.v1.GenesisAccount
 */
export class GenesisAccount extends Message {
    constructor(data) {
        super();
        /**
         * address defines an ethereum hex formated address of an account
         *
         * @generated from field: string address = 1;
         */
        this.address = "";
        /**
         * code defines the hex bytes of the account code.
         *
         * @generated from field: string code = 2;
         */
        this.code = "";
        /**
         * storage defines the set of state key values for the account.
         *
         * @generated from field: repeated ethermint.evm.v1.State storage = 3;
         */
        this.storage = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisAccount().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisAccount().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisAccount().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GenesisAccount, a, b);
    }
}
GenesisAccount.runtime = proto3;
GenesisAccount.typeName = "ethermint.evm.v1.GenesisAccount";
GenesisAccount.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "storage", kind: "message", T: State, repeated: true },
]);
//# sourceMappingURL=genesis_pb.js.map