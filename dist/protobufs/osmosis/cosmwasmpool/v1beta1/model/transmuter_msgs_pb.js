// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/cosmwasmpool/v1beta1/model/transmuter_msgs.proto (package osmosis.cosmwasmpool.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * ===================== JoinPoolExecuteMsg
 *
 * @generated from message osmosis.cosmwasmpool.v1beta1.EmptyRequest
 */
export class EmptyRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new EmptyRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new EmptyRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new EmptyRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(EmptyRequest, a, b);
    }
}
EmptyRequest.runtime = proto3;
EmptyRequest.typeName = "osmosis.cosmwasmpool.v1beta1.EmptyRequest";
EmptyRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest
 */
export class JoinPoolExecuteMsgRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new JoinPoolExecuteMsgRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new JoinPoolExecuteMsgRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new JoinPoolExecuteMsgRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(JoinPoolExecuteMsgRequest, a, b);
    }
}
JoinPoolExecuteMsgRequest.runtime = proto3;
JoinPoolExecuteMsgRequest.typeName = "osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest";
JoinPoolExecuteMsgRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "join_pool", kind: "message", T: EmptyRequest },
]);
/**
 * @generated from message osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse
 */
export class JoinPoolExecuteMsgResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new JoinPoolExecuteMsgResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new JoinPoolExecuteMsgResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new JoinPoolExecuteMsgResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(JoinPoolExecuteMsgResponse, a, b);
    }
}
JoinPoolExecuteMsgResponse.runtime = proto3;
JoinPoolExecuteMsgResponse.typeName = "osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse";
JoinPoolExecuteMsgResponse.fields = proto3.util.newFieldList(() => []);
/**
 * ===================== ExitPoolExecuteMsg
 *
 * @generated from message osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest
 */
export class ExitPoolExecuteMsgRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ExitPoolExecuteMsgRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ExitPoolExecuteMsgRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ExitPoolExecuteMsgRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ExitPoolExecuteMsgRequest, a, b);
    }
}
ExitPoolExecuteMsgRequest.runtime = proto3;
ExitPoolExecuteMsgRequest.typeName = "osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest";
ExitPoolExecuteMsgRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "exit_pool", kind: "message", T: EmptyRequest },
]);
/**
 * @generated from message osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse
 */
export class ExitPoolExecuteMsgResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ExitPoolExecuteMsgResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ExitPoolExecuteMsgResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ExitPoolExecuteMsgResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ExitPoolExecuteMsgResponse, a, b);
    }
}
ExitPoolExecuteMsgResponse.runtime = proto3;
ExitPoolExecuteMsgResponse.typeName = "osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse";
ExitPoolExecuteMsgResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=transmuter_msgs_pb.js.map