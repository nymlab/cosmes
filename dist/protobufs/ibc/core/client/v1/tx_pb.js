// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/core/client/v1/tx.proto (package ibc.core.client.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Plan } from "../../../../cosmos/upgrade/v1beta1/upgrade_pb.js";
import { Params } from "./client_pb.js";
/**
 * MsgCreateClient defines a message to create an IBC client
 *
 * @generated from message ibc.core.client.v1.MsgCreateClient
 */
export class MsgCreateClient extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 3;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateClient().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateClient().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateClient().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateClient, a, b);
    }
}
MsgCreateClient.runtime = proto3;
MsgCreateClient.typeName = "ibc.core.client.v1.MsgCreateClient";
MsgCreateClient.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_state", kind: "message", T: Any },
    { no: 2, name: "consensus_state", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgCreateClientResponse defines the Msg/CreateClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgCreateClientResponse
 */
export class MsgCreateClientResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateClientResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateClientResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateClientResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateClientResponse, a, b);
    }
}
MsgCreateClientResponse.runtime = proto3;
MsgCreateClientResponse.typeName = "ibc.core.client.v1.MsgCreateClientResponse";
MsgCreateClientResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgUpdateClient defines an sdk.Msg to update a IBC client state using
 * the given client message.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateClient
 */
export class MsgUpdateClient extends Message {
    constructor(data) {
        super();
        /**
         * client unique identifier
         *
         * @generated from field: string client_id = 1;
         */
        this.clientId = "";
        /**
         * signer address
         *
         * @generated from field: string signer = 3;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateClient().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateClient().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateClient().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateClient, a, b);
    }
}
MsgUpdateClient.runtime = proto3;
MsgUpdateClient.typeName = "ibc.core.client.v1.MsgUpdateClient";
MsgUpdateClient.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_message", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgUpdateClientResponse defines the Msg/UpdateClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateClientResponse
 */
export class MsgUpdateClientResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateClientResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateClientResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateClientResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateClientResponse, a, b);
    }
}
MsgUpdateClientResponse.runtime = proto3;
MsgUpdateClientResponse.typeName = "ibc.core.client.v1.MsgUpdateClientResponse";
MsgUpdateClientResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client
 * state
 *
 * @generated from message ibc.core.client.v1.MsgUpgradeClient
 */
export class MsgUpgradeClient extends Message {
    constructor(data) {
        super();
        /**
         * client unique identifier
         *
         * @generated from field: string client_id = 1;
         */
        this.clientId = "";
        /**
         * proof that old chain committed to new client
         *
         * @generated from field: bytes proof_upgrade_client = 4;
         */
        this.proofUpgradeClient = new Uint8Array(0);
        /**
         * proof that old chain committed to new consensus state
         *
         * @generated from field: bytes proof_upgrade_consensus_state = 5;
         */
        this.proofUpgradeConsensusState = new Uint8Array(0);
        /**
         * signer address
         *
         * @generated from field: string signer = 6;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpgradeClient().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpgradeClient().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpgradeClient().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpgradeClient, a, b);
    }
}
MsgUpgradeClient.runtime = proto3;
MsgUpgradeClient.typeName = "ibc.core.client.v1.MsgUpgradeClient";
MsgUpgradeClient.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_state", kind: "message", T: Any },
    { no: 3, name: "consensus_state", kind: "message", T: Any },
    { no: 4, name: "proof_upgrade_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "proof_upgrade_consensus_state", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpgradeClientResponse
 */
export class MsgUpgradeClientResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpgradeClientResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpgradeClientResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpgradeClientResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpgradeClientResponse, a, b);
    }
}
MsgUpgradeClientResponse.runtime = proto3;
MsgUpgradeClientResponse.typeName = "ibc.core.client.v1.MsgUpgradeClientResponse";
MsgUpgradeClientResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
 * light client misbehaviour.
 * This message has been deprecated. Use MsgUpdateClient instead.
 *
 * @generated from message ibc.core.client.v1.MsgSubmitMisbehaviour
 * @deprecated
 */
export class MsgSubmitMisbehaviour extends Message {
    constructor(data) {
        super();
        /**
         * client unique identifier
         *
         * @generated from field: string client_id = 1;
         */
        this.clientId = "";
        /**
         * signer address
         *
         * @generated from field: string signer = 3;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSubmitMisbehaviour().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSubmitMisbehaviour().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSubmitMisbehaviour().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgSubmitMisbehaviour, a, b);
    }
}
MsgSubmitMisbehaviour.runtime = proto3;
MsgSubmitMisbehaviour.typeName = "ibc.core.client.v1.MsgSubmitMisbehaviour";
MsgSubmitMisbehaviour.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "misbehaviour", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response
 * type.
 *
 * @generated from message ibc.core.client.v1.MsgSubmitMisbehaviourResponse
 */
export class MsgSubmitMisbehaviourResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSubmitMisbehaviourResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSubmitMisbehaviourResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSubmitMisbehaviourResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgSubmitMisbehaviourResponse, a, b);
    }
}
MsgSubmitMisbehaviourResponse.runtime = proto3;
MsgSubmitMisbehaviourResponse.typeName = "ibc.core.client.v1.MsgSubmitMisbehaviourResponse";
MsgSubmitMisbehaviourResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgRecoverClient defines the message used to recover a frozen or expired client.
 *
 * @generated from message ibc.core.client.v1.MsgRecoverClient
 */
export class MsgRecoverClient extends Message {
    constructor(data) {
        super();
        /**
         * the client identifier for the client to be updated if the proposal passes
         *
         * @generated from field: string subject_client_id = 1;
         */
        this.subjectClientId = "";
        /**
         * the substitute client identifier for the client which will replace the subject
         * client
         *
         * @generated from field: string substitute_client_id = 2;
         */
        this.substituteClientId = "";
        /**
         * signer address
         *
         * @generated from field: string signer = 3;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRecoverClient().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRecoverClient().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRecoverClient().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRecoverClient, a, b);
    }
}
MsgRecoverClient.runtime = proto3;
MsgRecoverClient.typeName = "ibc.core.client.v1.MsgRecoverClient";
MsgRecoverClient.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "subject_client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "substitute_client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgRecoverClientResponse defines the Msg/RecoverClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgRecoverClientResponse
 */
export class MsgRecoverClientResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRecoverClientResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRecoverClientResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRecoverClientResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRecoverClientResponse, a, b);
    }
}
MsgRecoverClientResponse.runtime = proto3;
MsgRecoverClientResponse.typeName = "ibc.core.client.v1.MsgRecoverClientResponse";
MsgRecoverClientResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
 *
 * @generated from message ibc.core.client.v1.MsgIBCSoftwareUpgrade
 */
export class MsgIBCSoftwareUpgrade extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 3;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgIBCSoftwareUpgrade().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgIBCSoftwareUpgrade().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgIBCSoftwareUpgrade().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgIBCSoftwareUpgrade, a, b);
    }
}
MsgIBCSoftwareUpgrade.runtime = proto3;
MsgIBCSoftwareUpgrade.typeName = "ibc.core.client.v1.MsgIBCSoftwareUpgrade";
MsgIBCSoftwareUpgrade.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "plan", kind: "message", T: Plan },
    { no: 2, name: "upgraded_client_state", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response type.
 *
 * @generated from message ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse
 */
export class MsgIBCSoftwareUpgradeResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgIBCSoftwareUpgradeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgIBCSoftwareUpgradeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgIBCSoftwareUpgradeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgIBCSoftwareUpgradeResponse, a, b);
    }
}
MsgIBCSoftwareUpgradeResponse.runtime = proto3;
MsgIBCSoftwareUpgradeResponse.typeName = "ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse";
MsgIBCSoftwareUpgradeResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgUpdateParams defines the sdk.Msg type to update the client parameters.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 1;
         */
        this.signer = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParams, a, b);
    }
}
MsgUpdateParams.runtime = proto3;
MsgUpdateParams.typeName = "ibc.core.client.v1.MsgUpdateParams";
MsgUpdateParams.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
]);
/**
 * MsgUpdateParamsResponse defines the MsgUpdateParams response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
MsgUpdateParamsResponse.runtime = proto3;
MsgUpdateParamsResponse.typeName = "ibc.core.client.v1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map