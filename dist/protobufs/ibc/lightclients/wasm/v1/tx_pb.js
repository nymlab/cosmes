// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/lightclients/wasm/v1/tx.proto (package ibc.lightclients.wasm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * MsgStoreCode defines the request type for the StoreCode rpc.
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgStoreCode
 */
export class MsgStoreCode extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 1;
         */
        this.signer = "";
        /**
         * wasm byte code of light client contract. It can be raw or gzip compressed
         *
         * @generated from field: bytes wasm_byte_code = 2;
         */
        this.wasmByteCode = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgStoreCode().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgStoreCode().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgStoreCode().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgStoreCode, a, b);
    }
}
MsgStoreCode.runtime = proto3;
MsgStoreCode.typeName = "ibc.lightclients.wasm.v1.MsgStoreCode";
MsgStoreCode.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "wasm_byte_code", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgStoreCodeResponse defines the response type for the StoreCode rpc
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgStoreCodeResponse
 */
export class MsgStoreCodeResponse extends Message {
    constructor(data) {
        super();
        /**
         * checksum is the sha256 hash of the stored code
         *
         * @generated from field: bytes checksum = 1;
         */
        this.checksum = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgStoreCodeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgStoreCodeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgStoreCodeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgStoreCodeResponse, a, b);
    }
}
MsgStoreCodeResponse.runtime = proto3;
MsgStoreCodeResponse.typeName = "ibc.lightclients.wasm.v1.MsgStoreCodeResponse";
MsgStoreCodeResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "checksum", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgRemoveChecksum defines the request type for the MsgRemoveChecksum rpc.
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgRemoveChecksum
 */
export class MsgRemoveChecksum extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 1;
         */
        this.signer = "";
        /**
         * checksum is the sha256 hash to be removed from the store
         *
         * @generated from field: bytes checksum = 2;
         */
        this.checksum = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRemoveChecksum().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRemoveChecksum().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRemoveChecksum().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRemoveChecksum, a, b);
    }
}
MsgRemoveChecksum.runtime = proto3;
MsgRemoveChecksum.typeName = "ibc.lightclients.wasm.v1.MsgRemoveChecksum";
MsgRemoveChecksum.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "checksum", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgStoreChecksumResponse defines the response type for the StoreCode rpc
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse
 */
export class MsgRemoveChecksumResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRemoveChecksumResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRemoveChecksumResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRemoveChecksumResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRemoveChecksumResponse, a, b);
    }
}
MsgRemoveChecksumResponse.runtime = proto3;
MsgRemoveChecksumResponse.typeName = "ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse";
MsgRemoveChecksumResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgMigrateContract defines the request type for the MigrateContract rpc.
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgMigrateContract
 */
export class MsgMigrateContract extends Message {
    constructor(data) {
        super();
        /**
         * signer address
         *
         * @generated from field: string signer = 1;
         */
        this.signer = "";
        /**
         * the client id of the contract
         *
         * @generated from field: string client_id = 2;
         */
        this.clientId = "";
        /**
         * checksum is the sha256 hash of the new wasm byte code for the contract
         *
         * @generated from field: bytes checksum = 3;
         */
        this.checksum = new Uint8Array(0);
        /**
         * the json encoded message to be passed to the contract on migration
         *
         * @generated from field: bytes msg = 4;
         */
        this.msg = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgMigrateContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgMigrateContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgMigrateContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgMigrateContract, a, b);
    }
}
MsgMigrateContract.runtime = proto3;
MsgMigrateContract.typeName = "ibc.lightclients.wasm.v1.MsgMigrateContract";
MsgMigrateContract.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "checksum", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "msg", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * MsgMigrateContractResponse defines the response type for the MigrateContract rpc
 *
 * @generated from message ibc.lightclients.wasm.v1.MsgMigrateContractResponse
 */
export class MsgMigrateContractResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgMigrateContractResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgMigrateContractResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgMigrateContractResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgMigrateContractResponse, a, b);
    }
}
MsgMigrateContractResponse.runtime = proto3;
MsgMigrateContractResponse.typeName = "ibc.lightclients.wasm.v1.MsgMigrateContractResponse";
MsgMigrateContractResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map