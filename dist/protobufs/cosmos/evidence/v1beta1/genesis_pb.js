// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file cosmos/evidence/v1beta1/genesis.proto (package cosmos.evidence.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3 } from "@bufbuild/protobuf";
/**
 * GenesisState defines the evidence module's genesis state.
 *
 * @generated from message cosmos.evidence.v1beta1.GenesisState
 */
export class GenesisState extends Message {
    constructor(data) {
        super();
        /**
         * evidence defines all the evidence at genesis.
         *
         * @generated from field: repeated google.protobuf.Any evidence = 1;
         */
        this.evidence = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisState().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisState().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisState().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GenesisState, a, b);
    }
}
GenesisState.runtime = proto3;
GenesisState.typeName = "cosmos.evidence.v1beta1.GenesisState";
GenesisState.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "evidence", kind: "message", T: Any, repeated: true },
]);
//# sourceMappingURL=genesis_pb.js.map