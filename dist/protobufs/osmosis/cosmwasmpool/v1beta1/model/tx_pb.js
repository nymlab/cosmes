// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/cosmwasmpool/v1beta1/model/tx.proto (package osmosis.cosmwasmpool.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * ===================== MsgCreateCosmwasmPool
 *
 * @generated from message osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPool
 */
export class MsgCreateCosmWasmPool extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 code_id = 1;
         */
        this.codeId = protoInt64.zero;
        /**
         * @generated from field: bytes instantiate_msg = 2;
         */
        this.instantiateMsg = new Uint8Array(0);
        /**
         * @generated from field: string sender = 3;
         */
        this.sender = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateCosmWasmPool().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateCosmWasmPool().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateCosmWasmPool().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateCosmWasmPool, a, b);
    }
}
MsgCreateCosmWasmPool.runtime = proto3;
MsgCreateCosmWasmPool.typeName = "osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPool";
MsgCreateCosmWasmPool.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "instantiate_msg", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * Returns a unique poolID to identify the pool with.
 *
 * @generated from message osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPoolResponse
 */
export class MsgCreateCosmWasmPoolResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateCosmWasmPoolResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateCosmWasmPoolResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateCosmWasmPoolResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateCosmWasmPoolResponse, a, b);
    }
}
MsgCreateCosmWasmPoolResponse.runtime = proto3;
MsgCreateCosmWasmPoolResponse.typeName = "osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPoolResponse";
MsgCreateCosmWasmPoolResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
//# sourceMappingURL=tx_pb.js.map