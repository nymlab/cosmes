// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/valsetpref/v1beta1/tx.proto (package osmosis.valsetpref.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ValidatorPreference } from "./state_pb.js";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
/**
 * MsgCreateValidatorSetPreference is a list that holds validator-set.
 *
 * @generated from message osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreference
 */
export class MsgSetValidatorSetPreference extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to create a validator-set.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        /**
         * list of {valAddr, weight} to delegate to
         *
         * @generated from field: repeated osmosis.valsetpref.v1beta1.ValidatorPreference preferences = 2;
         */
        this.preferences = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSetValidatorSetPreference().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSetValidatorSetPreference().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSetValidatorSetPreference().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgSetValidatorSetPreference, a, b);
    }
}
MsgSetValidatorSetPreference.runtime = proto3;
MsgSetValidatorSetPreference.typeName = "osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreference";
MsgSetValidatorSetPreference.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "preferences", kind: "message", T: ValidatorPreference, repeated: true },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreferenceResponse
 */
export class MsgSetValidatorSetPreferenceResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgSetValidatorSetPreferenceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgSetValidatorSetPreferenceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgSetValidatorSetPreferenceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgSetValidatorSetPreferenceResponse, a, b);
    }
}
MsgSetValidatorSetPreferenceResponse.runtime = proto3;
MsgSetValidatorSetPreferenceResponse.typeName = "osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreferenceResponse";
MsgSetValidatorSetPreferenceResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgDelegateToValidatorSet allows users to delegate to an existing
 * validator-set
 *
 * @generated from message osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSet
 */
export class MsgDelegateToValidatorSet extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to delegate.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDelegateToValidatorSet().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDelegateToValidatorSet().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDelegateToValidatorSet().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDelegateToValidatorSet, a, b);
    }
}
MsgDelegateToValidatorSet.runtime = proto3;
MsgDelegateToValidatorSet.typeName = "osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSet";
MsgDelegateToValidatorSet.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "coin", kind: "message", T: Coin },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSetResponse
 */
export class MsgDelegateToValidatorSetResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDelegateToValidatorSetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDelegateToValidatorSetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDelegateToValidatorSetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDelegateToValidatorSetResponse, a, b);
    }
}
MsgDelegateToValidatorSetResponse.runtime = proto3;
MsgDelegateToValidatorSetResponse.typeName = "osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSetResponse";
MsgDelegateToValidatorSetResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSet
 */
export class MsgUndelegateFromValidatorSet extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to undelegate.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUndelegateFromValidatorSet().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUndelegateFromValidatorSet().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUndelegateFromValidatorSet().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUndelegateFromValidatorSet, a, b);
    }
}
MsgUndelegateFromValidatorSet.runtime = proto3;
MsgUndelegateFromValidatorSet.typeName = "osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSet";
MsgUndelegateFromValidatorSet.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "coin", kind: "message", T: Coin },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSetResponse
 */
export class MsgUndelegateFromValidatorSetResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUndelegateFromValidatorSetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUndelegateFromValidatorSetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUndelegateFromValidatorSetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUndelegateFromValidatorSetResponse, a, b);
    }
}
MsgUndelegateFromValidatorSetResponse.runtime = proto3;
MsgUndelegateFromValidatorSetResponse.typeName = "osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSetResponse";
MsgUndelegateFromValidatorSetResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSet
 */
export class MsgUndelegateFromRebalancedValidatorSet extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to undelegate.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUndelegateFromRebalancedValidatorSet().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUndelegateFromRebalancedValidatorSet().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUndelegateFromRebalancedValidatorSet().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUndelegateFromRebalancedValidatorSet, a, b);
    }
}
MsgUndelegateFromRebalancedValidatorSet.runtime = proto3;
MsgUndelegateFromRebalancedValidatorSet.typeName = "osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSet";
MsgUndelegateFromRebalancedValidatorSet.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "coin", kind: "message", T: Coin },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSetResponse
 */
export class MsgUndelegateFromRebalancedValidatorSetResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUndelegateFromRebalancedValidatorSetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUndelegateFromRebalancedValidatorSetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUndelegateFromRebalancedValidatorSetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUndelegateFromRebalancedValidatorSetResponse, a, b);
    }
}
MsgUndelegateFromRebalancedValidatorSetResponse.runtime = proto3;
MsgUndelegateFromRebalancedValidatorSetResponse.typeName = "osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSetResponse";
MsgUndelegateFromRebalancedValidatorSetResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSet
 */
export class MsgRedelegateValidatorSet extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to create a validator-set.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        /**
         * list of {valAddr, weight} to delegate to
         *
         * @generated from field: repeated osmosis.valsetpref.v1beta1.ValidatorPreference preferences = 2;
         */
        this.preferences = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRedelegateValidatorSet().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRedelegateValidatorSet().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRedelegateValidatorSet().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRedelegateValidatorSet, a, b);
    }
}
MsgRedelegateValidatorSet.runtime = proto3;
MsgRedelegateValidatorSet.typeName = "osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSet";
MsgRedelegateValidatorSet.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "preferences", kind: "message", T: ValidatorPreference, repeated: true },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSetResponse
 */
export class MsgRedelegateValidatorSetResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRedelegateValidatorSetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRedelegateValidatorSetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRedelegateValidatorSetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRedelegateValidatorSetResponse, a, b);
    }
}
MsgRedelegateValidatorSetResponse.runtime = proto3;
MsgRedelegateValidatorSetResponse.typeName = "osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSetResponse";
MsgRedelegateValidatorSetResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgWithdrawDelegationRewards allows user to claim staking rewards from the
 * validator set.
 *
 * @generated from message osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewards
 */
export class MsgWithdrawDelegationRewards extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to claim staking rewards.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgWithdrawDelegationRewards().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgWithdrawDelegationRewards().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgWithdrawDelegationRewards().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgWithdrawDelegationRewards, a, b);
    }
}
MsgWithdrawDelegationRewards.runtime = proto3;
MsgWithdrawDelegationRewards.typeName = "osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewards";
MsgWithdrawDelegationRewards.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewardsResponse
 */
export class MsgWithdrawDelegationRewardsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgWithdrawDelegationRewardsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgWithdrawDelegationRewardsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgWithdrawDelegationRewardsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgWithdrawDelegationRewardsResponse, a, b);
    }
}
MsgWithdrawDelegationRewardsResponse.runtime = proto3;
MsgWithdrawDelegationRewardsResponse.typeName = "osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewardsResponse";
MsgWithdrawDelegationRewardsResponse.fields = proto3.util.newFieldList(() => []);
/**
 * MsgDelegateBondedTokens breaks bonded lockup (by ID) of osmo, of
 * length <= 2 weeks and takes all that osmo and delegates according to
 * delegator's current validator set preference.
 *
 * @generated from message osmosis.valsetpref.v1beta1.MsgDelegateBondedTokens
 */
export class MsgDelegateBondedTokens extends Message {
    constructor(data) {
        super();
        /**
         * delegator is the user who is trying to force unbond osmo and delegate.
         *
         * @generated from field: string delegator = 1;
         */
        this.delegator = "";
        /**
         * lockup id of osmo in the pool
         *
         * @generated from field: uint64 lockID = 2;
         */
        this.lockID = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDelegateBondedTokens().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDelegateBondedTokens().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDelegateBondedTokens().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDelegateBondedTokens, a, b);
    }
}
MsgDelegateBondedTokens.runtime = proto3;
MsgDelegateBondedTokens.typeName = "osmosis.valsetpref.v1beta1.MsgDelegateBondedTokens";
MsgDelegateBondedTokens.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "delegator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lockID", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message osmosis.valsetpref.v1beta1.MsgDelegateBondedTokensResponse
 */
export class MsgDelegateBondedTokensResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDelegateBondedTokensResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDelegateBondedTokensResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDelegateBondedTokensResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDelegateBondedTokensResponse, a, b);
    }
}
MsgDelegateBondedTokensResponse.runtime = proto3;
MsgDelegateBondedTokensResponse.typeName = "osmosis.valsetpref.v1beta1.MsgDelegateBondedTokensResponse";
MsgDelegateBondedTokensResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map