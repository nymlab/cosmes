// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file tendermint/types/block.proto (package tendermint.types, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { Commit, Data, Header } from "./types_pb.js";
import { EvidenceList } from "./evidence_pb.js";
/**
 * @generated from message tendermint.types.Block
 */
export class Block extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Block().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Block().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Block().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Block, a, b);
    }
}
Block.runtime = proto3;
Block.typeName = "tendermint.types.Block";
Block.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "header", kind: "message", T: Header },
    { no: 2, name: "data", kind: "message", T: Data },
    { no: 3, name: "evidence", kind: "message", T: EvidenceList },
    { no: 4, name: "last_commit", kind: "message", T: Commit },
]);
//# sourceMappingURL=block_pb.js.map