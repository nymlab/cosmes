// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/ocr/v1beta1/tx.proto (package injective.ocr.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { MsgAcceptPayeeship, MsgAcceptPayeeshipResponse, MsgCreateFeed, MsgCreateFeedResponse, MsgFundFeedRewardPool, MsgFundFeedRewardPoolResponse, MsgSetPayees, MsgSetPayeesResponse, MsgTransferPayeeship, MsgTransferPayeeshipResponse, MsgTransmit, MsgTransmitResponse, MsgUpdateFeed, MsgUpdateFeedResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgWithdrawFeedRewardPool, MsgWithdrawFeedRewardPoolResponse } from "./tx_pb.js";
const TYPE_NAME = "injective.ocr.v1beta1.Msg";
/**
 * CreateFeed defines a method for creating feed by module admin
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.CreateFeed
 */
export const MsgCreateFeedService = {
    typeName: TYPE_NAME,
    method: "CreateFeed",
    Request: MsgCreateFeed,
    Response: MsgCreateFeedResponse,
};
/**
 * CreateFeed defines a method for creating feed by feed admin or feed billing
 * admin
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.UpdateFeed
 */
export const MsgUpdateFeedService = {
    typeName: TYPE_NAME,
    method: "UpdateFeed",
    Request: MsgUpdateFeed,
    Response: MsgUpdateFeedResponse,
};
/**
 * Transmit defines a method for transmitting the feed info by transmitter
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.Transmit
 */
export const MsgTransmitService = {
    typeName: TYPE_NAME,
    method: "Transmit",
    Request: MsgTransmit,
    Response: MsgTransmitResponse,
};
/**
 * FundFeedRewardPool defines a method to put funds into feed reward pool
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.FundFeedRewardPool
 */
export const MsgFundFeedRewardPoolService = {
    typeName: TYPE_NAME,
    method: "FundFeedRewardPool",
    Request: MsgFundFeedRewardPool,
    Response: MsgFundFeedRewardPoolResponse,
};
/**
 * WithdrawFeedRewardPool defines a method to witdhraw feed reward by feed
 * admin or billing admin
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.WithdrawFeedRewardPool
 */
export const MsgWithdrawFeedRewardPoolService = {
    typeName: TYPE_NAME,
    method: "WithdrawFeedRewardPool",
    Request: MsgWithdrawFeedRewardPool,
    Response: MsgWithdrawFeedRewardPoolResponse,
};
/**
 * SetPayees defines a method to set payees for transmitters (batch action)
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.SetPayees
 */
export const MsgSetPayeesService = {
    typeName: TYPE_NAME,
    method: "SetPayees",
    Request: MsgSetPayees,
    Response: MsgSetPayeesResponse,
};
/**
 * TransferPayeeship defines a method for a payee to transfer reward receive
 * ownership
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.TransferPayeeship
 */
export const MsgTransferPayeeshipService = {
    typeName: TYPE_NAME,
    method: "TransferPayeeship",
    Request: MsgTransferPayeeship,
    Response: MsgTransferPayeeshipResponse,
};
/**
 * AcceptPayeeship defines a method for a new payee to accept reward receive
 * ownership
 *
 * @generated from rpc injective.ocr.v1beta1.Msg.AcceptPayeeship
 */
export const MsgAcceptPayeeshipService = {
    typeName: TYPE_NAME,
    method: "AcceptPayeeship",
    Request: MsgAcceptPayeeship,
    Response: MsgAcceptPayeeshipResponse,
};
/**
 * @generated from rpc injective.ocr.v1beta1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
    typeName: TYPE_NAME,
    method: "UpdateParams",
    Request: MsgUpdateParams,
    Response: MsgUpdateParamsResponse,
};
//# sourceMappingURL=tx_cosmes.js.map