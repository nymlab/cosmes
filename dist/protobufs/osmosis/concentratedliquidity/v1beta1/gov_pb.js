// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/concentratedliquidity/v1beta1/gov.proto (package osmosis.concentratedliquidity.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * CreateConcentratedLiquidityPoolsProposal is a gov Content type for creating
 * concentrated liquidity pools. If a CreateConcentratedLiquidityPoolsProposal
 * passes, the pools are created via pool manager module account.
 *
 * @generated from message osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal
 */
export class CreateConcentratedLiquidityPoolsProposal extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: repeated osmosis.concentratedliquidity.v1beta1.PoolRecord pool_records = 3;
         */
        this.poolRecords = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreateConcentratedLiquidityPoolsProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreateConcentratedLiquidityPoolsProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreateConcentratedLiquidityPoolsProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(CreateConcentratedLiquidityPoolsProposal, a, b);
    }
}
CreateConcentratedLiquidityPoolsProposal.runtime = proto3;
CreateConcentratedLiquidityPoolsProposal.typeName = "osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal";
CreateConcentratedLiquidityPoolsProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_records", kind: "message", T: PoolRecord, repeated: true },
]);
/**
 * TickSpacingDecreaseProposal is a gov Content type for proposing a tick
 * spacing decrease for a pool. The proposal will fail if one of the pools do
 * not exist, or if the new tick spacing is not less than the current tick
 * spacing.
 *
 * @generated from message osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal
 */
export class TickSpacingDecreaseProposal extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string title = 1;
         */
        this.title = "";
        /**
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: repeated osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord pool_id_to_tick_spacing_records = 3;
         */
        this.poolIdToTickSpacingRecords = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TickSpacingDecreaseProposal().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TickSpacingDecreaseProposal().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TickSpacingDecreaseProposal().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(TickSpacingDecreaseProposal, a, b);
    }
}
TickSpacingDecreaseProposal.runtime = proto3;
TickSpacingDecreaseProposal.typeName = "osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal";
TickSpacingDecreaseProposal.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_id_to_tick_spacing_records", kind: "message", T: PoolIdToTickSpacingRecord, repeated: true },
]);
/**
 * PoolIdToTickSpacingRecord is a struct that contains a pool id to new tick
 * spacing pair.
 *
 * @generated from message osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord
 */
export class PoolIdToTickSpacingRecord extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: uint64 new_tick_spacing = 2;
         */
        this.newTickSpacing = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PoolIdToTickSpacingRecord().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PoolIdToTickSpacingRecord().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PoolIdToTickSpacingRecord().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PoolIdToTickSpacingRecord, a, b);
    }
}
PoolIdToTickSpacingRecord.runtime = proto3;
PoolIdToTickSpacingRecord.typeName = "osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord";
PoolIdToTickSpacingRecord.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "new_tick_spacing", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message osmosis.concentratedliquidity.v1beta1.PoolRecord
 */
export class PoolRecord extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string denom0 = 1;
         */
        this.denom0 = "";
        /**
         * @generated from field: string denom1 = 2;
         */
        this.denom1 = "";
        /**
         * @generated from field: uint64 tick_spacing = 3;
         */
        this.tickSpacing = protoInt64.zero;
        /**
         * @generated from field: string spread_factor = 5;
         */
        this.spreadFactor = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PoolRecord().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PoolRecord().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PoolRecord().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PoolRecord, a, b);
    }
}
PoolRecord.runtime = proto3;
PoolRecord.typeName = "osmosis.concentratedliquidity.v1beta1.PoolRecord";
PoolRecord.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "denom0", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "denom1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tick_spacing", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "spread_factor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=gov_pb.js.map