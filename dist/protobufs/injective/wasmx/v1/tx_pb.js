// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/wasmx/v1/tx.proto (package injective.wasmx.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./wasmx_pb.js";
import { ContractRegistrationRequest } from "./proposal_pb.js";
/**
 * MsgExecuteContractCompat submits the given message data to a smart contract,
 * compatible with EIP712
 *
 * @generated from message injective.wasmx.v1.MsgExecuteContractCompat
 */
export class MsgExecuteContractCompat extends Message {
    constructor(data) {
        super();
        /**
         * Sender is the that actor that signed the messages
         *
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * Contract is the address of the smart contract
         *
         * @generated from field: string contract = 2;
         */
        this.contract = "";
        /**
         * Msg json encoded message to be passed to the contract
         *
         * @generated from field: string msg = 3;
         */
        this.msg = "";
        /**
         * Funds coins that are transferred to the contract on execution
         *
         * @generated from field: string funds = 4;
         */
        this.funds = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgExecuteContractCompat().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgExecuteContractCompat().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgExecuteContractCompat().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgExecuteContractCompat, a, b);
    }
}
MsgExecuteContractCompat.runtime = proto3;
MsgExecuteContractCompat.typeName = "injective.wasmx.v1.MsgExecuteContractCompat";
MsgExecuteContractCompat.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "funds", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * MsgExecuteContractCompatResponse returns execution result data.
 *
 * @generated from message injective.wasmx.v1.MsgExecuteContractCompatResponse
 */
export class MsgExecuteContractCompatResponse extends Message {
    constructor(data) {
        super();
        /**
         * Data contains bytes to returned from the contract
         *
         * @generated from field: bytes data = 1;
         */
        this.data = new Uint8Array(0);
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgExecuteContractCompatResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgExecuteContractCompatResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgExecuteContractCompatResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgExecuteContractCompatResponse, a, b);
    }
}
MsgExecuteContractCompatResponse.runtime = proto3;
MsgExecuteContractCompatResponse.typeName = "injective.wasmx.v1.MsgExecuteContractCompatResponse";
MsgExecuteContractCompatResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * @generated from message injective.wasmx.v1.MsgUpdateContract
 */
export class MsgUpdateContract extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * Unique Identifier for contract instance to be registered.
         *
         * @generated from field: string contract_address = 2;
         */
        this.contractAddress = "";
        /**
         * Maximum gas to be used for the smart contract execution.
         *
         * @generated from field: uint64 gas_limit = 3;
         */
        this.gasLimit = protoInt64.zero;
        /**
         * gas price to be used for the smart contract execution.
         *
         * @generated from field: uint64 gas_price = 4;
         */
        this.gasPrice = protoInt64.zero;
        /**
         * optional - admin account that will be allowed to perform any changes
         *
         * @generated from field: string admin_address = 5;
         */
        this.adminAddress = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateContract, a, b);
    }
}
MsgUpdateContract.runtime = proto3;
MsgUpdateContract.typeName = "injective.wasmx.v1.MsgUpdateContract";
MsgUpdateContract.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "gas_limit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "gas_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "admin_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.wasmx.v1.MsgUpdateContractResponse
 */
export class MsgUpdateContractResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateContractResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateContractResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateContractResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateContractResponse, a, b);
    }
}
MsgUpdateContractResponse.runtime = proto3;
MsgUpdateContractResponse.typeName = "injective.wasmx.v1.MsgUpdateContractResponse";
MsgUpdateContractResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.wasmx.v1.MsgActivateContract
 */
export class MsgActivateContract extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * Unique Identifier for contract instance to be activated.
         *
         * @generated from field: string contract_address = 2;
         */
        this.contractAddress = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgActivateContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgActivateContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgActivateContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgActivateContract, a, b);
    }
}
MsgActivateContract.runtime = proto3;
MsgActivateContract.typeName = "injective.wasmx.v1.MsgActivateContract";
MsgActivateContract.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.wasmx.v1.MsgActivateContractResponse
 */
export class MsgActivateContractResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgActivateContractResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgActivateContractResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgActivateContractResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgActivateContractResponse, a, b);
    }
}
MsgActivateContractResponse.runtime = proto3;
MsgActivateContractResponse.typeName = "injective.wasmx.v1.MsgActivateContractResponse";
MsgActivateContractResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.wasmx.v1.MsgDeactivateContract
 */
export class MsgDeactivateContract extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * Unique Identifier for contract instance to be deactivated.
         *
         * @generated from field: string contract_address = 2;
         */
        this.contractAddress = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDeactivateContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDeactivateContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDeactivateContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDeactivateContract, a, b);
    }
}
MsgDeactivateContract.runtime = proto3;
MsgDeactivateContract.typeName = "injective.wasmx.v1.MsgDeactivateContract";
MsgDeactivateContract.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.wasmx.v1.MsgDeactivateContractResponse
 */
export class MsgDeactivateContractResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDeactivateContractResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDeactivateContractResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDeactivateContractResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDeactivateContractResponse, a, b);
    }
}
MsgDeactivateContractResponse.runtime = proto3;
MsgDeactivateContractResponse.typeName = "injective.wasmx.v1.MsgDeactivateContractResponse";
MsgDeactivateContractResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.wasmx.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message {
    constructor(data) {
        super();
        /**
         * authority is the address of the governance account.
         *
         * @generated from field: string authority = 1;
         */
        this.authority = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParams, a, b);
    }
}
MsgUpdateParams.runtime = proto3;
MsgUpdateParams.typeName = "injective.wasmx.v1.MsgUpdateParams";
MsgUpdateParams.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
]);
/**
 * @generated from message injective.wasmx.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
MsgUpdateParamsResponse.runtime = proto3;
MsgUpdateParamsResponse.typeName = "injective.wasmx.v1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.wasmx.v1.MsgRegisterContract
 */
export class MsgRegisterContract extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRegisterContract().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRegisterContract().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRegisterContract().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRegisterContract, a, b);
    }
}
MsgRegisterContract.runtime = proto3;
MsgRegisterContract.typeName = "injective.wasmx.v1.MsgRegisterContract";
MsgRegisterContract.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract_registration_request", kind: "message", T: ContractRegistrationRequest },
]);
/**
 * @generated from message injective.wasmx.v1.MsgRegisterContractResponse
 */
export class MsgRegisterContractResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRegisterContractResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRegisterContractResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRegisterContractResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRegisterContractResponse, a, b);
    }
}
MsgRegisterContractResponse.runtime = proto3;
MsgRegisterContractResponse.typeName = "injective.wasmx.v1.MsgRegisterContractResponse";
MsgRegisterContractResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map