// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/gamm/v1beta1/query.proto (package dymensionxyz.dymension.gamm.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Any, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./genesis_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { SwapAmountInRoute, SwapAmountOutRoute } from "../../poolmanager/v1beta1/swap_route_pb.js";
/**
 * ================================================== Params
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryParamsRequest, a, b);
    }
}
QueryParamsRequest.runtime = proto3;
QueryParamsRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryParamsRequest";
QueryParamsRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryParamsResponse, a, b);
    }
}
QueryParamsResponse.runtime = proto3;
QueryParamsResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryParamsResponse";
QueryParamsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
]);
/**
 * =============================== Pool
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolRequest
 */
export class QueryPoolRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolRequest, a, b);
    }
}
QueryPoolRequest.runtime = proto3;
QueryPoolRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolRequest";
QueryPoolRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolResponse
 */
export class QueryPoolResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolResponse, a, b);
    }
}
QueryPoolResponse.runtime = proto3;
QueryPoolResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolResponse";
QueryPoolResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: Any },
]);
/**
 * =============================== Pools
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolsRequest
 */
export class QueryPoolsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolsRequest, a, b);
    }
}
QueryPoolsRequest.runtime = proto3;
QueryPoolsRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolsRequest";
QueryPoolsRequest.fields = proto3.util.newFieldList(() => [
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolsResponse
 */
export class QueryPoolsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated google.protobuf.Any pools = 1;
         */
        this.pools = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolsResponse, a, b);
    }
}
QueryPoolsResponse.runtime = proto3;
QueryPoolsResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolsResponse";
QueryPoolsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pools", kind: "message", T: Any, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
]);
/**
 * =============================== NumPools
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryNumPoolsRequest
 * @deprecated
 */
export class QueryNumPoolsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryNumPoolsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryNumPoolsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryNumPoolsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryNumPoolsRequest, a, b);
    }
}
QueryNumPoolsRequest.runtime = proto3;
QueryNumPoolsRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryNumPoolsRequest";
QueryNumPoolsRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryNumPoolsResponse
 * @deprecated
 */
export class QueryNumPoolsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 num_pools = 1;
         */
        this.numPools = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryNumPoolsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryNumPoolsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryNumPoolsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryNumPoolsResponse, a, b);
    }
}
QueryNumPoolsResponse.runtime = proto3;
QueryNumPoolsResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryNumPoolsResponse";
QueryNumPoolsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "num_pools", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * =============================== CalcJoinPoolShares
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolSharesRequest
 */
export class QueryCalcJoinPoolSharesRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin tokens_in = 2;
         */
        this.tokensIn = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcJoinPoolSharesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcJoinPoolSharesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcJoinPoolSharesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcJoinPoolSharesRequest, a, b);
    }
}
QueryCalcJoinPoolSharesRequest.runtime = proto3;
QueryCalcJoinPoolSharesRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolSharesRequest";
QueryCalcJoinPoolSharesRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "tokens_in", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolSharesResponse
 */
export class QueryCalcJoinPoolSharesResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string share_out_amount = 1;
         */
        this.shareOutAmount = "";
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin tokens_out = 2;
         */
        this.tokensOut = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcJoinPoolSharesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcJoinPoolSharesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcJoinPoolSharesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcJoinPoolSharesResponse, a, b);
    }
}
QueryCalcJoinPoolSharesResponse.runtime = proto3;
QueryCalcJoinPoolSharesResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolSharesResponse";
QueryCalcJoinPoolSharesResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "share_out_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tokens_out", kind: "message", T: Coin, repeated: true },
]);
/**
 * =============================== CalcExitPoolCoinsFromShares
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest
 */
export class QueryCalcExitPoolCoinsFromSharesRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: string share_in_amount = 2;
         */
        this.shareInAmount = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcExitPoolCoinsFromSharesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcExitPoolCoinsFromSharesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcExitPoolCoinsFromSharesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcExitPoolCoinsFromSharesRequest, a, b);
    }
}
QueryCalcExitPoolCoinsFromSharesRequest.runtime = proto3;
QueryCalcExitPoolCoinsFromSharesRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest";
QueryCalcExitPoolCoinsFromSharesRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "share_in_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse
 */
export class QueryCalcExitPoolCoinsFromSharesResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin tokens_out = 1;
         */
        this.tokensOut = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcExitPoolCoinsFromSharesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcExitPoolCoinsFromSharesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcExitPoolCoinsFromSharesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcExitPoolCoinsFromSharesResponse, a, b);
    }
}
QueryCalcExitPoolCoinsFromSharesResponse.runtime = proto3;
QueryCalcExitPoolCoinsFromSharesResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse";
QueryCalcExitPoolCoinsFromSharesResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "tokens_out", kind: "message", T: Coin, repeated: true },
]);
/**
 * =============================== PoolParams
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolParamsRequest
 */
export class QueryPoolParamsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolParamsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolParamsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolParamsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolParamsRequest, a, b);
    }
}
QueryPoolParamsRequest.runtime = proto3;
QueryPoolParamsRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolParamsRequest";
QueryPoolParamsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolParamsResponse
 */
export class QueryPoolParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolParamsResponse, a, b);
    }
}
QueryPoolParamsResponse.runtime = proto3;
QueryPoolParamsResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolParamsResponse";
QueryPoolParamsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Any },
]);
/**
 * =============================== PoolLiquidity
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalPoolLiquidityRequest
 */
export class QueryTotalPoolLiquidityRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalPoolLiquidityRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalPoolLiquidityRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalPoolLiquidityRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalPoolLiquidityRequest, a, b);
    }
}
QueryTotalPoolLiquidityRequest.runtime = proto3;
QueryTotalPoolLiquidityRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalPoolLiquidityRequest";
QueryTotalPoolLiquidityRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalPoolLiquidityResponse
 */
export class QueryTotalPoolLiquidityResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin liquidity = 1;
         */
        this.liquidity = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalPoolLiquidityResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalPoolLiquidityResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalPoolLiquidityResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalPoolLiquidityResponse, a, b);
    }
}
QueryTotalPoolLiquidityResponse.runtime = proto3;
QueryTotalPoolLiquidityResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalPoolLiquidityResponse";
QueryTotalPoolLiquidityResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "liquidity", kind: "message", T: Coin, repeated: true },
]);
/**
 * =============================== TotalShares
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalSharesRequest
 */
export class QueryTotalSharesRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalSharesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalSharesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalSharesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalSharesRequest, a, b);
    }
}
QueryTotalSharesRequest.runtime = proto3;
QueryTotalSharesRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalSharesRequest";
QueryTotalSharesRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalSharesResponse
 */
export class QueryTotalSharesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalSharesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalSharesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalSharesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalSharesResponse, a, b);
    }
}
QueryTotalSharesResponse.runtime = proto3;
QueryTotalSharesResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalSharesResponse";
QueryTotalSharesResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "total_shares", kind: "message", T: Coin },
]);
/**
 * =============================== CalcJoinPoolNoSwapShares
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest
 */
export class QueryCalcJoinPoolNoSwapSharesRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin tokens_in = 2;
         */
        this.tokensIn = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcJoinPoolNoSwapSharesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcJoinPoolNoSwapSharesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcJoinPoolNoSwapSharesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcJoinPoolNoSwapSharesRequest, a, b);
    }
}
QueryCalcJoinPoolNoSwapSharesRequest.runtime = proto3;
QueryCalcJoinPoolNoSwapSharesRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest";
QueryCalcJoinPoolNoSwapSharesRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "tokens_in", kind: "message", T: Coin, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse
 */
export class QueryCalcJoinPoolNoSwapSharesResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin tokens_out = 1;
         */
        this.tokensOut = [];
        /**
         * @generated from field: string shares_out = 2;
         */
        this.sharesOut = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryCalcJoinPoolNoSwapSharesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryCalcJoinPoolNoSwapSharesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryCalcJoinPoolNoSwapSharesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryCalcJoinPoolNoSwapSharesResponse, a, b);
    }
}
QueryCalcJoinPoolNoSwapSharesResponse.runtime = proto3;
QueryCalcJoinPoolNoSwapSharesResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse";
QueryCalcJoinPoolNoSwapSharesResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "tokens_out", kind: "message", T: Coin, repeated: true },
    { no: 2, name: "shares_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * QuerySpotPriceRequest defines the gRPC request structure for a SpotPrice
 * query.
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySpotPriceRequest
 * @deprecated
 */
export class QuerySpotPriceRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 pool_id = 1;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: string base_asset_denom = 2;
         */
        this.baseAssetDenom = "";
        /**
         * @generated from field: string quote_asset_denom = 3;
         */
        this.quoteAssetDenom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySpotPriceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySpotPriceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySpotPriceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySpotPriceRequest, a, b);
    }
}
QuerySpotPriceRequest.runtime = proto3;
QuerySpotPriceRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySpotPriceRequest";
QuerySpotPriceRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "base_asset_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "quote_asset_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolsWithFilterRequest
 */
export class QueryPoolsWithFilterRequest extends Message {
    constructor(data) {
        super();
        /**
         * String of the coins in single string seperated by comma. Ex)
         * 10uatom,100uosmo
         *
         * @generated from field: string min_liquidity = 1;
         */
        this.minLiquidity = "";
        /**
         * @generated from field: string pool_type = 2;
         */
        this.poolType = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolsWithFilterRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolsWithFilterRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolsWithFilterRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolsWithFilterRequest, a, b);
    }
}
QueryPoolsWithFilterRequest.runtime = proto3;
QueryPoolsWithFilterRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolsWithFilterRequest";
QueryPoolsWithFilterRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "min_liquidity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pagination", kind: "message", T: PageRequest },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryPoolsWithFilterResponse
 */
export class QueryPoolsWithFilterResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated google.protobuf.Any pools = 1;
         */
        this.pools = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryPoolsWithFilterResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryPoolsWithFilterResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryPoolsWithFilterResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryPoolsWithFilterResponse, a, b);
    }
}
QueryPoolsWithFilterResponse.runtime = proto3;
QueryPoolsWithFilterResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryPoolsWithFilterResponse";
QueryPoolsWithFilterResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pools", kind: "message", T: Any, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
]);
/**
 * QuerySpotPriceResponse defines the gRPC response structure for a SpotPrice
 * query.
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySpotPriceResponse
 * @deprecated
 */
export class QuerySpotPriceResponse extends Message {
    constructor(data) {
        super();
        /**
         * String of the Dec. Ex) 10.203uatom
         *
         * @generated from field: string spot_price = 1;
         */
        this.spotPrice = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySpotPriceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySpotPriceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySpotPriceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySpotPriceResponse, a, b);
    }
}
QuerySpotPriceResponse.runtime = proto3;
QuerySpotPriceResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySpotPriceResponse";
QuerySpotPriceResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * =============================== EstimateSwapExactAmountIn
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountInRequest
 */
export class QuerySwapExactAmountInRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: uint64 pool_id = 2;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: string token_in = 3;
         */
        this.tokenIn = "";
        /**
         * @generated from field: repeated dymensionxyz.dymension.poolmanager.v1beta1.SwapAmountInRoute routes = 4;
         */
        this.routes = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySwapExactAmountInRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySwapExactAmountInRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySwapExactAmountInRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySwapExactAmountInRequest, a, b);
    }
}
QuerySwapExactAmountInRequest.runtime = proto3;
QuerySwapExactAmountInRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountInRequest";
QuerySwapExactAmountInRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "routes", kind: "message", T: SwapAmountInRoute, repeated: true },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountInResponse
 */
export class QuerySwapExactAmountInResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string token_out_amount = 1;
         */
        this.tokenOutAmount = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySwapExactAmountInResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySwapExactAmountInResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySwapExactAmountInResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySwapExactAmountInResponse, a, b);
    }
}
QuerySwapExactAmountInResponse.runtime = proto3;
QuerySwapExactAmountInResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountInResponse";
QuerySwapExactAmountInResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "token_out_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * =============================== EstimateSwapExactAmountOut
 *
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountOutRequest
 */
export class QuerySwapExactAmountOutRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: uint64 pool_id = 2;
         */
        this.poolId = protoInt64.zero;
        /**
         * @generated from field: repeated dymensionxyz.dymension.poolmanager.v1beta1.SwapAmountOutRoute routes = 3;
         */
        this.routes = [];
        /**
         * @generated from field: string token_out = 4;
         */
        this.tokenOut = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySwapExactAmountOutRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySwapExactAmountOutRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySwapExactAmountOutRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySwapExactAmountOutRequest, a, b);
    }
}
QuerySwapExactAmountOutRequest.runtime = proto3;
QuerySwapExactAmountOutRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountOutRequest";
QuerySwapExactAmountOutRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "routes", kind: "message", T: SwapAmountOutRoute, repeated: true },
    { no: 4, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountOutResponse
 */
export class QuerySwapExactAmountOutResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string token_in_amount = 1;
         */
        this.tokenInAmount = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QuerySwapExactAmountOutResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QuerySwapExactAmountOutResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QuerySwapExactAmountOutResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QuerySwapExactAmountOutResponse, a, b);
    }
}
QuerySwapExactAmountOutResponse.runtime = proto3;
QuerySwapExactAmountOutResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QuerySwapExactAmountOutResponse";
QuerySwapExactAmountOutResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "token_in_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalLiquidityRequest
 */
export class QueryTotalLiquidityRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalLiquidityRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalLiquidityRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalLiquidityRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalLiquidityRequest, a, b);
    }
}
QueryTotalLiquidityRequest.runtime = proto3;
QueryTotalLiquidityRequest.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalLiquidityRequest";
QueryTotalLiquidityRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message dymensionxyz.dymension.gamm.v1beta1.QueryTotalLiquidityResponse
 */
export class QueryTotalLiquidityResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated cosmos.base.v1beta1.Coin liquidity = 1;
         */
        this.liquidity = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new QueryTotalLiquidityResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new QueryTotalLiquidityResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new QueryTotalLiquidityResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(QueryTotalLiquidityResponse, a, b);
    }
}
QueryTotalLiquidityResponse.runtime = proto3;
QueryTotalLiquidityResponse.typeName = "dymensionxyz.dymension.gamm.v1beta1.QueryTotalLiquidityResponse";
QueryTotalLiquidityResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "liquidity", kind: "message", T: Coin, repeated: true },
]);
//# sourceMappingURL=query_pb.js.map