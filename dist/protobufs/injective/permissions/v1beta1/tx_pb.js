// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/permissions/v1beta1/tx.proto (package injective.permissions.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { Namespace, Roles } from "./permissions_pb.js";
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message {
    constructor(data) {
        super();
        /**
         * authority is the address of the governance account.
         *
         * @generated from field: string authority = 1;
         */
        this.authority = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParams().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParams().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParams().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParams, a, b);
    }
}
MsgUpdateParams.runtime = proto3;
MsgUpdateParams.typeName = "injective.permissions.v1beta1.MsgUpdateParams";
MsgUpdateParams.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateParamsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateParamsResponse, a, b);
    }
}
MsgUpdateParamsResponse.runtime = proto3;
MsgUpdateParamsResponse.typeName = "injective.permissions.v1beta1.MsgUpdateParamsResponse";
MsgUpdateParamsResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgCreateNamespace
 */
export class MsgCreateNamespace extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateNamespace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateNamespace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateNamespace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateNamespace, a, b);
    }
}
MsgCreateNamespace.runtime = proto3;
MsgCreateNamespace.typeName = "injective.permissions.v1beta1.MsgCreateNamespace";
MsgCreateNamespace.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace", kind: "message", T: Namespace },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgCreateNamespaceResponse
 */
export class MsgCreateNamespaceResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgCreateNamespaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgCreateNamespaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgCreateNamespaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgCreateNamespaceResponse, a, b);
    }
}
MsgCreateNamespaceResponse.runtime = proto3;
MsgCreateNamespaceResponse.typeName = "injective.permissions.v1beta1.MsgCreateNamespaceResponse";
MsgCreateNamespaceResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgDeleteNamespace
 */
export class MsgDeleteNamespace extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * @generated from field: string namespace_denom = 2;
         */
        this.namespaceDenom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDeleteNamespace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDeleteNamespace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDeleteNamespace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDeleteNamespace, a, b);
    }
}
MsgDeleteNamespace.runtime = proto3;
MsgDeleteNamespace.typeName = "injective.permissions.v1beta1.MsgDeleteNamespace";
MsgDeleteNamespace.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgDeleteNamespaceResponse
 */
export class MsgDeleteNamespaceResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgDeleteNamespaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgDeleteNamespaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgDeleteNamespaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgDeleteNamespaceResponse, a, b);
    }
}
MsgDeleteNamespaceResponse.runtime = proto3;
MsgDeleteNamespaceResponse.typeName = "injective.permissions.v1beta1.MsgDeleteNamespaceResponse";
MsgDeleteNamespaceResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace
 */
export class MsgUpdateNamespace extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * namespace denom to which this updates are applied
         *
         * @generated from field: string namespace_denom = 2;
         */
        this.namespaceDenom = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespace().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespace().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespace().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespace, a, b);
    }
}
MsgUpdateNamespace.runtime = proto3;
MsgUpdateNamespace.typeName = "injective.permissions.v1beta1.MsgUpdateNamespace";
MsgUpdateNamespace.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "wasm_hook", kind: "message", T: MsgUpdateNamespace_MsgSetWasmHook },
    { no: 4, name: "mints_paused", kind: "message", T: MsgUpdateNamespace_MsgSetMintsPaused },
    { no: 5, name: "sends_paused", kind: "message", T: MsgUpdateNamespace_MsgSetSendsPaused },
    { no: 6, name: "burns_paused", kind: "message", T: MsgUpdateNamespace_MsgSetBurnsPaused },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetWasmHook
 */
export class MsgUpdateNamespace_MsgSetWasmHook extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string new_value = 1;
         */
        this.newValue = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespace_MsgSetWasmHook().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespace_MsgSetWasmHook().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespace_MsgSetWasmHook().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespace_MsgSetWasmHook, a, b);
    }
}
MsgUpdateNamespace_MsgSetWasmHook.runtime = proto3;
MsgUpdateNamespace_MsgSetWasmHook.typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetWasmHook";
MsgUpdateNamespace_MsgSetWasmHook.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetMintsPaused
 */
export class MsgUpdateNamespace_MsgSetMintsPaused extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bool new_value = 1;
         */
        this.newValue = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespace_MsgSetMintsPaused().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespace_MsgSetMintsPaused().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespace_MsgSetMintsPaused().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespace_MsgSetMintsPaused, a, b);
    }
}
MsgUpdateNamespace_MsgSetMintsPaused.runtime = proto3;
MsgUpdateNamespace_MsgSetMintsPaused.typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetMintsPaused";
MsgUpdateNamespace_MsgSetMintsPaused.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetSendsPaused
 */
export class MsgUpdateNamespace_MsgSetSendsPaused extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bool new_value = 1;
         */
        this.newValue = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespace_MsgSetSendsPaused().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespace_MsgSetSendsPaused().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespace_MsgSetSendsPaused().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespace_MsgSetSendsPaused, a, b);
    }
}
MsgUpdateNamespace_MsgSetSendsPaused.runtime = proto3;
MsgUpdateNamespace_MsgSetSendsPaused.typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetSendsPaused";
MsgUpdateNamespace_MsgSetSendsPaused.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetBurnsPaused
 */
export class MsgUpdateNamespace_MsgSetBurnsPaused extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bool new_value = 1;
         */
        this.newValue = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespace_MsgSetBurnsPaused().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespace_MsgSetBurnsPaused().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespace_MsgSetBurnsPaused().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespace_MsgSetBurnsPaused, a, b);
    }
}
MsgUpdateNamespace_MsgSetBurnsPaused.runtime = proto3;
MsgUpdateNamespace_MsgSetBurnsPaused.typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetBurnsPaused";
MsgUpdateNamespace_MsgSetBurnsPaused.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceResponse
 */
export class MsgUpdateNamespaceResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespaceResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespaceResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespaceResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespaceResponse, a, b);
    }
}
MsgUpdateNamespaceResponse.runtime = proto3;
MsgUpdateNamespaceResponse.typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceResponse";
MsgUpdateNamespaceResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceRoles
 */
export class MsgUpdateNamespaceRoles extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * namespace denom to which this updates are applied
         *
         * @generated from field: string namespace_denom = 2;
         */
        this.namespaceDenom = "";
        /**
         * new role definitions or updated permissions for existing roles
         *
         * @generated from field: map<string, uint32> role_permissions = 3;
         */
        this.rolePermissions = {};
        /**
         * new addresses to add or new roles for existing addresses to
         *
         * @generated from field: map<string, injective.permissions.v1beta1.Roles> address_roles = 4;
         */
        this.addressRoles = {};
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespaceRoles().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespaceRoles().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespaceRoles().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespaceRoles, a, b);
    }
}
MsgUpdateNamespaceRoles.runtime = proto3;
MsgUpdateNamespaceRoles.typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceRoles";
MsgUpdateNamespaceRoles.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_permissions", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 13 /* ScalarType.UINT32 */ } },
    { no: 4, name: "address_roles", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: Roles } },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceRolesResponse
 */
export class MsgUpdateNamespaceRolesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgUpdateNamespaceRolesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgUpdateNamespaceRolesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgUpdateNamespaceRolesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgUpdateNamespaceRolesResponse, a, b);
    }
}
MsgUpdateNamespaceRolesResponse.runtime = proto3;
MsgUpdateNamespaceRolesResponse.typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceRolesResponse";
MsgUpdateNamespaceRolesResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgRevokeNamespaceRoles
 */
export class MsgRevokeNamespaceRoles extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * namespace denom to which this updates are applied
         *
         * @generated from field: string namespace_denom = 2;
         */
        this.namespaceDenom = "";
        /**
         * map of {"address" => array of roles to revoke from this address}
         *
         * @generated from field: map<string, injective.permissions.v1beta1.Roles> address_roles_to_revoke = 3;
         */
        this.addressRolesToRevoke = {};
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRevokeNamespaceRoles().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRevokeNamespaceRoles().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRevokeNamespaceRoles().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRevokeNamespaceRoles, a, b);
    }
}
MsgRevokeNamespaceRoles.runtime = proto3;
MsgRevokeNamespaceRoles.typeName = "injective.permissions.v1beta1.MsgRevokeNamespaceRoles";
MsgRevokeNamespaceRoles.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address_roles_to_revoke", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: Roles } },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgRevokeNamespaceRolesResponse
 */
export class MsgRevokeNamespaceRolesResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgRevokeNamespaceRolesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgRevokeNamespaceRolesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgRevokeNamespaceRolesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgRevokeNamespaceRolesResponse, a, b);
    }
}
MsgRevokeNamespaceRolesResponse.runtime = proto3;
MsgRevokeNamespaceRolesResponse.typeName = "injective.permissions.v1beta1.MsgRevokeNamespaceRolesResponse";
MsgRevokeNamespaceRolesResponse.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message injective.permissions.v1beta1.MsgClaimVoucher
 */
export class MsgClaimVoucher extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string sender = 1;
         */
        this.sender = "";
        /**
         * address of the original voucher sender (typically a module address,
         *
         * @generated from field: string originator = 2;
         */
        this.originator = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgClaimVoucher().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgClaimVoucher().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgClaimVoucher().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgClaimVoucher, a, b);
    }
}
MsgClaimVoucher.runtime = proto3;
MsgClaimVoucher.typeName = "injective.permissions.v1beta1.MsgClaimVoucher";
MsgClaimVoucher.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "originator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message injective.permissions.v1beta1.MsgClaimVoucherResponse
 */
export class MsgClaimVoucherResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MsgClaimVoucherResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MsgClaimVoucherResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MsgClaimVoucherResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(MsgClaimVoucherResponse, a, b);
    }
}
MsgClaimVoucherResponse.runtime = proto3;
MsgClaimVoucherResponse.typeName = "injective.permissions.v1beta1.MsgClaimVoucherResponse";
MsgClaimVoucherResponse.fields = proto3.util.newFieldList(() => []);
//# sourceMappingURL=tx_pb.js.map