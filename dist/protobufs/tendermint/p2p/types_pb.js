// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file tendermint/p2p/types.proto (package tendermint.p2p, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * @generated from message tendermint.p2p.NetAddress
 */
export class NetAddress extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        /**
         * @generated from field: string ip = 2;
         */
        this.ip = "";
        /**
         * @generated from field: uint32 port = 3;
         */
        this.port = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new NetAddress().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new NetAddress().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new NetAddress().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(NetAddress, a, b);
    }
}
NetAddress.runtime = proto3;
NetAddress.typeName = "tendermint.p2p.NetAddress";
NetAddress.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
]);
/**
 * @generated from message tendermint.p2p.ProtocolVersion
 */
export class ProtocolVersion extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 p2p = 1;
         */
        this.p2p = protoInt64.zero;
        /**
         * @generated from field: uint64 block = 2;
         */
        this.block = protoInt64.zero;
        /**
         * @generated from field: uint64 app = 3;
         */
        this.app = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProtocolVersion().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProtocolVersion().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProtocolVersion().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ProtocolVersion, a, b);
    }
}
ProtocolVersion.runtime = proto3;
ProtocolVersion.typeName = "tendermint.p2p.ProtocolVersion";
ProtocolVersion.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "p2p", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "app", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * @generated from message tendermint.p2p.DefaultNodeInfo
 */
export class DefaultNodeInfo extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string default_node_id = 2;
         */
        this.defaultNodeId = "";
        /**
         * @generated from field: string listen_addr = 3;
         */
        this.listenAddr = "";
        /**
         * @generated from field: string network = 4;
         */
        this.network = "";
        /**
         * @generated from field: string version = 5;
         */
        this.version = "";
        /**
         * @generated from field: bytes channels = 6;
         */
        this.channels = new Uint8Array(0);
        /**
         * @generated from field: string moniker = 7;
         */
        this.moniker = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DefaultNodeInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DefaultNodeInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DefaultNodeInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DefaultNodeInfo, a, b);
    }
}
DefaultNodeInfo.runtime = proto3;
DefaultNodeInfo.typeName = "tendermint.p2p.DefaultNodeInfo";
DefaultNodeInfo.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "protocol_version", kind: "message", T: ProtocolVersion },
    { no: 2, name: "default_node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "listen_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "network", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "channels", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "moniker", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "other", kind: "message", T: DefaultNodeInfoOther },
]);
/**
 * @generated from message tendermint.p2p.DefaultNodeInfoOther
 */
export class DefaultNodeInfoOther extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string tx_index = 1;
         */
        this.txIndex = "";
        /**
         * @generated from field: string rpc_address = 2;
         */
        this.rpcAddress = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DefaultNodeInfoOther().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DefaultNodeInfoOther().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DefaultNodeInfoOther().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(DefaultNodeInfoOther, a, b);
    }
}
DefaultNodeInfoOther.runtime = proto3;
DefaultNodeInfoOther.typeName = "tendermint.p2p.DefaultNodeInfoOther";
DefaultNodeInfoOther.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "tx_index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rpc_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=types_pb.js.map