// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/core/types/v1/genesis.proto (package ibc.core.types.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { GenesisState as GenesisState$1 } from "../../client/v1/genesis_pb.js";
import { GenesisState as GenesisState$2 } from "../../connection/v1/genesis_pb.js";
import { GenesisState as GenesisState$3 } from "../../channel/v1/genesis_pb.js";
/**
 * GenesisState defines the ibc module's genesis state.
 *
 * @generated from message ibc.core.types.v1.GenesisState
 */
export class GenesisState extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GenesisState().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GenesisState().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GenesisState().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GenesisState, a, b);
    }
}
GenesisState.runtime = proto3;
GenesisState.typeName = "ibc.core.types.v1.GenesisState";
GenesisState.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "client_genesis", kind: "message", T: GenesisState$1 },
    { no: 2, name: "connection_genesis", kind: "message", T: GenesisState$2 },
    { no: 3, name: "channel_genesis", kind: "message", T: GenesisState$3 },
]);
//# sourceMappingURL=genesis_pb.js.map